<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/3/2017 5:15:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FFWLON-D13BZS"
  DTS:CreatorName="FFWUK\HK2"
  DTS:DTSID="{BF1E36F6-7079-4C02-A12C-BE1664FE065E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="2057"
  DTS:ObjectName="GetAccessToken"
  DTS:PackageType="5"
  DTS:VersionBuild="64"
  DTS:VersionGUID="{0710A361-DF95-465C-A738-CD48CF2009EE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[slondev2\sql2016.HK2]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{C9E0CDFB-300B-40F8-9838-E4DB8AF829AE}"
      DTS:ObjectName="slondev2\sql2016.HK2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=slondev2\sql2016;Initial Catalog=HK2;Integrated Security=True;Application Name=SSIS-GetAccessToken-{C9E0CDFB-300B-40F8-9838-E4DB8AF829AE}slondev2\sql2016.HK2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{11778FDC-FDB8-4A78-8DFF-AC98267CC2F0}"
      DTS:ObjectName="pExecutionID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9CF843DA-DEDE-4C4D-A99E-2051CD54A679}"
      DTS:ObjectName="pResponceStatus">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">NaN</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AF49B44-ECA2-4BDF-B121-BCB3F7DD052F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ppAccessCode]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AccessCode">
      <DTS:VariableValue
        DTS:DataType="8">AQABAAIAAABHh4kmS_aKT5XrjzxRAtHzQLuczGqNN6M-Mwd3UiP-StdFV_ZOy507PRJvvDdC8UpFWGH5lLNmzm0B1sK_VDg1VEysjCCYUCAzctSKFtSJT0LavtM1ffDy7eK0rHZ4qIyY_Yq-aUkI0pZyTi7bsiaXHcjpChhniDBU89ttHCUHa0hLF8EeAiwQ5D_w0WDITy-Dr9K3IXZ9GqrlePfKvpSBVQ8bzHRilYwXti6Fq9XTbmGYsbPHfnPGmSSD43umACn8Sw93-jGNWo2fGS5td84JGLr2IcTCUBowpMEXjg5Z0oDs3n6COMLYV5z9WJx4aWMpAggykPQ4J6LDPJYkqeHaZrwNLQsupIIqMcuQqf_OwR9Zo9k6sT7GriTgdDnAe54Dqhl1uwUtCBw0sFlZJsy968an8e3Zy7PrJdxxiofb9xzxcm8ghkl2kHXGjX_SvH-7ZaU1YiTeApQ1CkIZ_wn764b0SMzgUyim7e57Yuw13u25cU3xGkjc3hxVtdO_DchaObKH2ppu5Qk9Dsi_cG6MusPvrBmGkILviMOzruL6w3iqW5BCyF34PYByAnbzDjQFZeQewhbnZtbSc9fFs-labmxmiHQ05byhlaJa-nRnblk6eZxISPsym6mq9mlTCgmwr0lnuEiN_mtP78GmoUul7oKv_q6BBIZ_WrZBOdkxBBJBfSeQ3mmkv25HCZ2UEUIgAA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0D749C1-D34C-429B-AA76-7E9AE25E51A5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::pExecutionID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C691A873-2117-473D-B7A0-03D6E143CB05}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetAccessToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49D3AAE0-C653-47D7-82E9-E757EB640C23}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetRefreshToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B1CAE1A-8527-427D-88AC-F8573AC89769}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InitialAccessTokenDateTime">
      <DTS:VariableValue
        DTS:DataType="7">11/6/2017 2:01:57 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{69D4C83E-273B-4BF6-BB5A-A9827FB61976}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TokenExpirationDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/1900</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Generate Access and Refresh Tokens"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{634a90df-4180-4bbb-8bec-dfea14766cd6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Access and Refresh Tokens"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_af33ccb8cf3c45d9955b9184dbfddec0"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::pExecutionID,$Package::pResponceStatus"
          ReadWriteVariables="User::AccessCode,User::GetAccessToken,User::GetRefreshToken,User::InitialAccessTokenDateTime,User::TokenExpirationDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Settings.get_Default():ST_43bdd0aea65142c5a9418f463813ea37.Properties.Sett" +
    "ings")]

namespace ST_43bdd0aea65142c5a9418f463813ea37.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using RestSharp;
using Newtonsoft.Json.Linq;
using System.Net;
using Newtonsoft.Json;
using System.Data.SqlClient;
#endregion

namespace ST_43bdd0aea65142c5a9418f463813ea37
{  	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		public void Main()
		{
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;

            // TODO: Add your code here

            var RefreshToken = (string)Dts.Variables["User::GetRefreshToken"].Value;
            var AccessToken = (string)Dts.Variables["User::GetAccessToken"].Value;
            DateTime TokenExpirationDateTime = (DateTime)Dts.Variables["User::TokenExpirationDate"].Value;
            DateTime InitialAccessTokenDateTime = (DateTime)Dts.Variables["User::InitialAccessTokenDateTime"].Value;
            var ExecutionID = (string)Dts.Variables["$Package::pExecutionID"].Value;
            var ResponceStatus = (string)Dts.Variables["$Package::pResponceStatus"].Value;

            try
            {
                var client = new RestClient("https://login.microsoftonline.com/352bdc64-a0bf-4458-a3e2-4a12e54d50d1/oauth2/token");
                var request = new RestRequest(Method.POST);
                IRestResponse response;

                //if token expiration date and tome is less than or equal to 5 mins create new access token using refresh token
                if ((TokenExpirationDateTime - DateTime.Now).TotalMinutes <= 5 || ResponceStatus == "TimedOut")
                {
                    request.AddHeader("cache-control", "no-cache");
                    request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
                    request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"grant_type\"\r\n\r\nrefresh_token\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"access_token\"\r\n\r\n" + AccessToken + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"refresh_token\"\r\n\r\n" + RefreshToken + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_id\"\r\n\r\n50eb507c-a9d0-4525-bef1-6fa37224599c\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_secret\"\r\n\r\nkS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);

                    response = client.Execute(request);
                    var data = (JObject)JsonConvert.DeserializeObject(response.Content);
                    AccessToken = data["access_token"].Value<string>();
                    RefreshToken = data["refresh_token"].Value<string>();
                    var expires_on = data["expires_in"].Value<double>();

                    Dts.Variables["User::GetAccessToken"].Value = AccessToken;
                    Dts.Variables["User::GetRefreshToken"].Value = RefreshToken;
                    Dts.Variables["User::TokenExpirationDate"].Value = DateTime.Now.AddSeconds(expires_on);
                }
                else if ((DateTime.Now - InitialAccessTokenDateTime).TotalDays > 89)
                {
                    string Code = (string)Dts.Variables["User::AccessCode"].Value;

                    request.AddHeader("cache-control", "no-cache");
                    request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
                    request.AddHeader("authorization", "client_id:50eb507c-a9d0-4525-bef1-6fa37224599c, client_secret:kS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=");
                    request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"grant_type\"\r\n\r\nauthorization_code\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"code\"\r\n\r\n" + Code + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_id\"\r\n\r\n50eb507c-a9d0-4525-bef1-6fa37224599c\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"redirect_uri\"\r\n\r\nhttps://www.getpostman.com/oauth2/callback\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_secret\"\r\n\r\nkS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"resource\"\r\n\r\nhttps://fieldfisher-test01.sandbox.operations.dynamics.com\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);

                    response = client.Execute(request);
                    var data = (JObject)JsonConvert.DeserializeObject(response.Content);
                    AccessToken = data["access_token"].Value<string>();
                    RefreshToken = data["refresh_token"].Value<string>();
                    var expires_on = data["expires_in"].Value<double>();

                    Dts.Variables["User::GetAccessToken"].Value = AccessToken;
                    Dts.Variables["User::GetRefreshToken"].Value = RefreshToken;
                    Dts.Variables["User::TokenExpirationDate"].Value = DateTime.Now.AddSeconds(expires_on);
                    Dts.Variables["User::InitialAccessTokenDateTime"].Value = DateTime.Now;
                }
                //else
                //{
                //    RefreshToken = RefreshToken;
                //    AccessToken = AccessToken;
                //    TokenExpirationDateTime = TokenExpirationDateTime;
                //    InitialAccessTokenDateTime = InitialAccessTokenDateTime;
                //}
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                LogError(ExecutionID, ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            
		}
        public void LogError ( string executionID, string ErrorMessage)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;
            //Use the connection in some code here, then release the connection
            myADONETConnection.Open();
            string query = "EXECUTE [etl].[usp_ETL_ErrorLogging] "+ ErrorMessage + ","+ executionID;
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();
            myADONETConnection.Close();
            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_af33ccb8cf3c45d9955b9184dbfddec0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{707047FA-8ECC-412C-B95E-5E4C552DA80E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_43bdd0aea65142c5a9418f463813ea37</RootNamespace>
    <AssemblyName>ST_af33ccb8cf3c45d9955b9184dbfddec0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL" />
    <Reference Include="RestSharp, Version=106.0.0.0, Culture=neutral, PublicKeyToken=598062e77f915f75, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\SSISdllFiles\RestSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_af33ccb8cf3c45d9955b9184dbfddec0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_af33ccb8cf3c45d9955b9184dbfddec0</msb:DisplayName>
		<msb:ProjectId>{04CED508-D843-462F-A6FA-B08011EBCC64}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_af33ccb8cf3c45d9955b9184dbfddec0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="f42dd2347f7b46578acfbfe58c6e9014">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>96</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_43bdd0aea65142c5a9418f463813ea37")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_43bdd0aea65142c5a9418f463813ea37")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_43bdd0aea65142c5a9418f463813ea37.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_af33ccb8cf3c45d9955b9184dbfddec0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALamBVoAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAnkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAExGAABPAAAAAGAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
RgAAAAAAAEgAAAACAAUAGCUAAHwgAAABAAAAAAAAAJRFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgC8AwAAAQAAESDADwAAKBAAAAoCKBEAAApvEgAACnIB
AABwbxMAAApvFAAACnQjAAABCgIoEQAACm8SAAAKci0AAHBvEwAACm8UAAAKdCMAAAELAigRAAAK
bxIAAApyVwAAcG8TAAAKbxQAAAqlDwAAAQwCKBEAAApvEgAACnKLAABwbxMAAApvFAAACqUPAAAB
DQIoEQAACm8SAAAKcs0AAHBvEwAACm8UAAAKdCMAAAETBAIoEQAACm8SAAAKcvsAAHBvEwAACm8U
AAAKdCMAAAETBXIvAQBwcxUAAAoTBhdzFgAAChMHCCgXAAAKKBgAAAoTCBIIKBkAAAojAAAAAAAA
FEAxEREFctgBAHAoGgAACjkSAQAAEQdy6gEAcHIGAgBwbxsAAAomEQdyGAIAcHIyAgBwbxsAAAom
EQdyMgIAcBuNIwAAASUWcrsCAHCiJRcHoiUYclgEAHCiJRkGoiUaciEFAHCiKBwAAAoabx0AAAom
EQYRB28eAAAKbx8AAAooIAAACnQpAAABJXKeBwBwbyEAAAooAQAAKwslcrgHAHBvIQAACigBAAAr
CnLUBwBwbyEAAAooAgAAKxMJAigRAAAKbxIAAApyLQAAcG8TAAAKB28jAAAKAigRAAAKbxIAAApy
AQAAcG8TAAAKBm8jAAAKAigRAAAKbxIAAApyVwAAcG8TAAAKKBcAAAoTChIKEQkoJAAACowPAAAB
byMAAAo4bAEAACgXAAAKCSgYAAAKEwgSCCglAAAKIwAAAAAAQFZAQ0oBAAACKBEAAApvEgAACnLq
BwBwbxMAAApvFAAACnQjAAABEwsRB3LqAQBwcgYCAHBvGwAACiYRB3IYAgBwcjICAHBvGwAACiYR
B3IMCABwcigIAHBvGwAACiYRB3IyAgBwcv8IAHARC3KWCgBwKCYAAAoabx0AAAomEQYRB28eAAAK
bx8AAAooIAAACnQpAAABJXKeBwBwbyEAAAooAQAAKwslcrgHAHBvIQAACigBAAArCnLUBwBwbyEA
AAooAgAAKxMMAigRAAAKbxIAAApyLQAAcG8TAAAKB28jAAAKAigRAAAKbxIAAApyAQAAcG8TAAAK
Bm8jAAAKAigRAAAKbxIAAApyVwAAcG8TAAAKKBcAAAoTChIKEQwoJAAACowPAAABbyMAAAoCKBEA
AApvEgAACnKLAABwbxMAAAooFwAACowPAAABbyMAAAoCKBEAAAoWbycAAAreHxMNAhEEEQ1vKAAA
CigCAAAGAigRAAAKF28nAAAK3gAqQRwAAAAAAADMAAAA0AIAAJwDAAAfAAAAEwAAARMwBAByAAAA
AgAAEQIoEQAACm8pAAAKclsPAHBvKgAACgIoEQAACm8rAAAKbywAAAoKBnQVAAABCwdvLQAACnJr
DwBwBHK3DwBwAyguAAAKB3MvAAAKbzAAAAomB28xAAAKAigRAAAKbykAAApyWw8AcG8qAAAKBm8y
AAAKKh4CKDMAAAoqHgIoNAAACiqufgEAAAQtHnK7DwBw0AMAAAIoNQAACm82AAAKczcAAAqAAQAA
BH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAig4AAAKKi5zCQAABoADAAAEKkJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFgFAAAjfgAAxAUAADAIAAAjU3RyaW5ncwAAAAD0
DQAAMBAAACNVUwAkHgAAEAAAACNHVUlEAAAANB4AAEgCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkL
AAAA+gEzABYAAAEAAAA0AAAABQAAAAYAAAAKAAAAAwAAADgAAAACAAAAEAAAAAIAAAACAAAAAwAA
AAQAAAABAAAABwAAAAEAAAABAAAAAgAAAAAAWgQBAAAAAAAGAPoCTwYGAIkDTwYGAEYCMQYPAMMG
AAAGAHMCIQUGAN0CIQUGAL4CIQUGAHADIQUGABoDIQUGADMDIQUGAIoCIQUGAKUCyQMKAE4DCQQK
ALEBCQQGADUBoAQOAM0HqwUOAPEHqwUGALgEoAQGAHIFoAQGAIoHoAQSAGQFtwcGAKcEoAQGACkC
MQYGANgFbwYGAJ8F7QQWAPkBRAQWAFoCRAQWAM0B2AQGAA4CTwYWAPoFkQcWAF4BkQcKADIECQQa
AAUHPgEaAAgBPgEGAOMDoAQOANgAqwUOAPAHqwUOAHMBqwUOAOUBqwUeAOQHjwUeAHcHtQUeAMEE
tQUeACkHtQUGACUAqAAaADgHPgEaAOgFPgESADMFfAUSAM0AtwcSAMMAfAUGAHwBoAQGABEBoAQG
AAkIIQUAAAAAVwAAAAAAAQABAAEAEADNBDMAOQABAAEAAAAQAHYG0gZRAAEABAAAARAAIAfSBnEA
AwAIAAMBAABUBwAAWQAEAAsAEQCsBDkBEQChAT0BEQDfAEEBBgaLAEUBVoBEB0gBVoCBAUgBUCAA
AAAAhgDTBAYAAQA0JAAAAACGABsGTAEBALIkAAAAAIYYJAYGAAMAuiQAAAAAgxgkBgYAAwDCJAAA
AACTCNQFUgEDAO4kAAAAAJMIiQFXAQMA9SQAAAAAkwiVAVwBAwD9JAAAAACWCJwHYgEEAAQlAAAA
AIYYJAYGAAQADCUAAAAAkRgqBmcBBAAAAAEAYAAAAAIA+wAAAAEAwwMJACQGAQARACQGBgAZACQG
CgApACQGEAAxACQGEAA5ACQGEABBACQGEABJACQGEABRACQGEABZACQGEABhACQGEABpACQGBgC5
ACQGBgDZACQGFQDpACQGBgDxAIIEMwBxAEwHOQABAQEHPwAJAZcERQARAa8DTACBACQGEACJACQG
UAB5AP0HVwB5AAIFXACRAA8HZQAZASIIaQCJAMoFbwAZAXAHdwCJAA4GfQCBAKcDiAA5AdgHkQBB
AX8HlQBJAZcEmgBZAb0DoQARAbkDtwB5AEQGvACRAGIHZQAZAXAHwgABAagHAQCZAO8AkQABATQH
zwBpAZcE1QABAREFTABxAUAF3AB5AcgEBgAZAXAH4QCBASQG6QCJARII8AB5AfMBBgBxAVIFtwBx
ACQGBgChACQGBgCRASMB9ACRAQUI/QDBACQGAwHhACQGBgAIABQALwEIABgANAEpAHMAogEuAAsA
egEuABMAgwEuABsAogEuACMAqwEuACsA1AEuADMA1AEuADsA2gEuAEMAqwEuAEsA4wEuAFMA1AEu
AFsA/QFDAGMANAFJAHMAogFhAHsANAFjAGsANAEbAMkAAwABAAQAAwAAANgFawEAAKkBcAEAAKAH
dQECAAUAAwACAAYABQABAAcABQACAAgABwAEgAAAAQAAAHsZW10AAAAAAAABAAAABAAAAAAAAAAA
AAAACwGfAAAAAAAOAAAAAAAAAAAAAAAUAeoDAAAAAGoAAAAAAAAAAAAAAB0BqwUAAAAABAAAAAAA
AAAAAAAACwGTAAAAAAAEAAAAAAAAAAAAAAALAaAEAAAAAA4AAAAAAAAAAAAAABQBbAAAAAAACAAA
AAAAAAAAAAAAJgGPBQAAAAAAAAAAAQAAAIAGAAAFAAIARQCvAEUAswAAAABTVF9hZjMzY2NiOGNm
M2M0NWQ5OTU1YjkxODRkYmZkZGVjMABJRW51bWVyYWJsZWAxAFNUXzQzYmRkMGFlYTY1MTQyYzVh
OTQxOGY0NjM4MTNlYTM3ADxNb2R1bGU+AGV4ZWN1dGlvbklEAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAERiQ29tbWFuZABTcWxDb21tYW5kAE1ldGhvZABkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UARXJyb3JNZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAU2VjdXJp
dHlQcm90b2NvbFR5cGUAUGFyYW1ldGVyVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UASVJlc3RSZXNwb25zZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTVF9hZjMzY2NiOGNmM2M0NWQ5OTU1YjkxODRkYmZkZGVjMC5kbGwA
c2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AVGlt
ZVNwYW4ASlRva2VuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBvcF9TdWJ0cmFjdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ARGJDb25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNx
bENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24A
Q3VsdHVyZUluZm8AUmVzdFNoYXJwAE5ld3RvbnNvZnQuSnNvbi5MaW5xAEFkZEhlYWRlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIAQWRk
UGFyYW1ldGVyAExvZ0Vycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAQWRkU2Vj
b25kcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
NDNiZGQwYWVhNjUxNDJjNWE5NDE4ZjQ2MzgxM2VhMzcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzQzYmRkMGFlYTY1MTQyYzVhOTQxOGY0NjM4MTNlYTM3
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBnZXRfVG90YWxNaW51dGVzAFNldHRpbmdzAEV4dGVu
c2lvbnMAZ2V0X0Nvbm5lY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9U
b3RhbERheXMAQ29uY2F0AEpPYmplY3QARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAUmVzdENsaWVudABn
ZXRfQ29udGVudABKc29uQ29udmVydABJUmVzdFJlcXVlc3QAZ2V0X05vdwBnZXRfQXNzZW1ibHkA
RXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AAAAACtVAHMAZQByADoAOgBHAGUAdABSAGUAZgBy
AGUAcwBoAFQAbwBrAGUAbgAAKVUAcwBlAHIAOgA6AEcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUA
bgAAM1UAcwBlAHIAOgA6AFQAbwBrAGUAbgBFAHgAcABpAHIAYQB0AGkAbwBuAEQAYQB0AGUAAEFV
AHMAZQByADoAOgBJAG4AaQB0AGkAYQBsAEEAYwBjAGUAcwBzAFQAbwBrAGUAbgBEAGEAdABlAFQA
aQBtAGUAAC0kAFAAYQBjAGsAYQBnAGUAOgA6AHAARQB4AGUAYwB1AHQAaQBvAG4ASQBEAAAzJABQ
AGEAYwBrAGEAZwBlADoAOgBwAFIAZQBzAHAAbwBuAGMAZQBTAHQAYQB0AHUAcwAAgKdoAHQAdABw
AHMAOgAvAC8AbABvAGcAaQBuAC4AbQBpAGMAcgBvAHMAbwBmAHQAbwBuAGwAaQBuAGUALgBjAG8A
bQAvADMANQAyAGIAZABjADYANAAtAGEAMABiAGYALQA0ADQANQA4AC0AYQAzAGUAMgAtADQAYQAx
ADIAZQA1ADQAZAA1ADAAZAAxAC8AbwBhAHUAdABoADIALwB0AG8AawBlAG4AARFUAGkAbQBlAGQA
TwB1AHQAABtjAGEAYwBoAGUALQBjAG8AbgB0AHIAbwBsAAERbgBvAC0AYwBhAGMAaABlAAEZYwBv
AG4AdABlAG4AdAAtAHQAeQBwAGUAAYCHbQB1AGwAdABpAHAAYQByAHQALwBmAG8AcgBtAC0AZABh
AHQAYQA7ACAAYgBvAHUAbgBkAGEAcgB5AD0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBtAEIA
bwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwABgZstAC0ALQAtAC0A
LQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVABy
AFoAdQAwAGcAVwANAAoAQwBvAG4AdABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAA
ZgBvAHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAGcAcgBhAG4AdABfAHQAeQBwAGUAIgAN
AAoADQAKAHIAZQBmAHIAZQBzAGgAXwB0AG8AawBlAG4ADQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsA
aQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBX
AA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0A
ZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AIgANAAoADQAK
AAGAxw0ACgAtAC0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3
AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwANAAoAQwBvAG4AdABlAG4AdAAtAEQAaQBzAHAA
bwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAHIAZQBm
AHIAZQBzAGgAXwB0AG8AawBlAG4AIgANAAoADQAKAAGCew0ACgAtAC0ALQAtAC0ALQBXAGUAYgBL
AGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcA
VwANAAoAQwBvAG4AdABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAt
AGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAGMAbABpAGUAbgB0AF8AaQBkACIADQAKAA0ACgA1ADAA
ZQBiADUAMAA3AGMALQBhADkAZAAwAC0ANAA1ADIANQAtAGIAZQBmADEALQA2AGYAYQAzADcAMgAy
ADQANQA5ADkAYwANAAoALQAtAC0ALQAtAC0AVwBlAGIASwBpAHQARgBvAHIAbQBCAG8AdQBuAGQA
YQByAHkANwBNAEEANABZAFcAeABrAFQAcgBaAHUAMABnAFcADQAKAEMAbwBuAHQAZQBuAHQALQBE
AGkAcwBwAG8AcwBpAHQAaQBvAG4AOgAgAGYAbwByAG0ALQBkAGEAdABhADsAIABuAGEAbQBlAD0A
IgBjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0ACIADQAKAA0ACgBrAFMANABsAFoANgBXAFQAUABU
AC8AOQBKAEUAaQAzADEAeQA3AEwARQA0AGgAWgBvAEgAMAB3AFcAbQBkADgASABFAFkAQgBEADIA
VABEAEQAaQBvAD0ADQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBk
AGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBXAC0ALQABGWEAYwBjAGUAcwBzAF8A
dABvAGsAZQBuAAAbcgBlAGYAcgBlAHMAaABfAHQAbwBrAGUAbgAAFWUAeABwAGkAcgBlAHMAXwBp
AG4AACFVAHMAZQByADoAOgBBAGMAYwBlAHMAcwBDAG8AZABlAAAbYQB1AHQAaABvAHIAaQB6AGEA
dABpAG8AbgAAgNVjAGwAaQBlAG4AdABfAGkAZAA6ADUAMABlAGIANQAwADcAYwAtAGEAOQBkADAA
LQA0ADUAMgA1AC0AYgBlAGYAMQAtADYAZgBhADMANwAyADIANAA1ADkAOQBjACwAIABjAGwAaQBl
AG4AdABfAHMAZQBjAHIAZQB0ADoAawBTADQAbABaADYAVwBUAFAAVAAvADkASgBFAGkAMwAxAHkA
NwBMAEUANABoAFoAbwBIADAAdwBXAG0AZAA4AEgARQBZAEIARAAyAFQARABEAGkAbwA9AAGBlS0A
LQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBX
AHgAawBUAHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkA
bwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAZwByAGEAbgB0AF8AdAB5
AHAAZQAiAA0ACgANAAoAYQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgBfAGMAbwBkAGUADQAKAC0A
LQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBX
AHgAawBUAHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkA
bwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAYwBvAGQAZQAiAA0ACgAN
AAoAAYTDDQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5
ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMA
cABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAYwBs
AGkAZQBuAHQAXwBpAGQAIgANAAoADQAKADUAMABlAGIANQAwADcAYwAtAGEAOQBkADAALQA0ADUA
MgA1AC0AYgBlAGYAMQAtADYAZgBhADMANwAyADIANAA1ADkAOQBjAA0ACgAtAC0ALQAtAC0ALQBX
AGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoA
dQAwAGcAVwANAAoAQwBvAG4AdABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAAZgBv
AHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAHIAZQBkAGkAcgBlAGMAdABfAHUAcgBpACIA
DQAKAA0ACgBoAHQAdABwAHMAOgAvAC8AdwB3AHcALgBnAGUAdABwAG8AcwB0AG0AYQBuAC4AYwBv
AG0ALwBvAGEAdQB0AGgAMgAvAGMAYQBsAGwAYgBhAGMAawANAAoALQAtAC0ALQAtAC0AVwBlAGIA
SwBpAHQARgBvAHIAbQBCAG8AdQBuAGQAYQByAHkANwBNAEEANABZAFcAeABrAFQAcgBaAHUAMABn
AFcADQAKAEMAbwBuAHQAZQBuAHQALQBEAGkAcwBwAG8AcwBpAHQAaQBvAG4AOgAgAGYAbwByAG0A
LQBkAGEAdABhADsAIABuAGEAbQBlAD0AIgBjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0ACIADQAK
AA0ACgBrAFMANABsAFoANgBXAFQAUABUAC8AOQBKAEUAaQAzADEAeQA3AEwARQA0AGgAWgBvAEgA
MAB3AFcAbQBkADgASABFAFkAQgBEADIAVABEAEQAaQBvAD0ADQAKAC0ALQAtAC0ALQAtAFcAZQBi
AEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAA
ZwBXAA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBt
AC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAcgBlAHMAbwB1AHIAYwBlACIADQAKAA0ACgBoAHQA
dABwAHMAOgAvAC8AZgBpAGUAbABkAGYAaQBzAGgAZQByAC0AdABlAHMAdAAwADEALgBzAGEAbgBk
AGIAbwB4AC4AbwBwAGUAcgBhAHQAaQBvAG4AcwAuAGQAeQBuAGEAbQBpAGMAcwAuAGMAbwBtAA0A
CgAtAC0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0
AFkAVwB4AGsAVAByAFoAdQAwAGcAVwAtAC0AAQ9BAEQATwBDAG8AbgBuAABLRQBYAEUAQwBVAFQA
RQAgAFsAZQB0AGwAXQAuAFsAdQBzAHAAXwBFAFQATABfAEUAcgByAG8AcgBMAG8AZwBnAGkAbgBn
AF0AIAAAAywAAHFTAFQAXwA0ADMAYgBkAGQAMABhAGUAYQA2ADUAMQA0ADIAYwA1AGEAOQA0ADEA
OABmADQANgAzADgAMQAzAGUAYQAzADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAAJrmg2EBpJtIiwdSdY61DUUABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkX
Bw4ODhE9ET0ODhJBEkURSQ0RPQ4NEk0FAAEBEX0FIAASgIEFIAASgIUGIAESgIkcAyAAHAYgAQER
gJEEAAARPQgAAhFJET0RPQMgAA0FAAICDg4HIAISgJUODgUAAQ4dDgogAxKAlQ4cEYCZCCABEoCd
EoCVAyAADgQAARwOBiABEoCpDg0QAQEeABUSgLEBEoCpAwoBDgMKAQ0EIAEBHAUgARE9DQYAAw4O
Dg4FBwIcElUFIAASgLUGIAESgLkcBCABHBwHAAQODg4ODgYgAgEOElUDIAAICAABEoDJEYDNBSAA
EoDRByACAQ4SgNEIt3pcVhk04IkIiYRdzYCAzJEIWYBi53+RX3UIMK1P5rKmru0EAAAAAAQBAAAA
AwYSYQMGEmUDBhIQAgYIAwYRFAUgAgEODgQAABJhBAAAEmUFAAEBEmUEAAASEAMAAAEECAASYQQI
ABJlBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzQzYmRkMGFlYTY1MTQyYzVhOTQxOGY0NjM4MTNlYTM3AAAFAQAAAAAIAQADRkZXAAAZ
AQAUQ29weXJpZ2h0IEAgRkZXIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB0
RgAAAAAAAAAAAACORgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEYAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACYE
AAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQBbXXsZAAABAFtdexk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASG
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAABGAEYAVwAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA0ADMAYgBkAGQAMABhAGUAYQA2ADUAMQA0ADIAYwA1AGEAOQA0ADEAOABmADQANgAzADgAMQAz
AGUAYQAzADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgA1ADIA
MwAuADIAMwA4ADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBh
AGYAMwAzAGMAYwBiADgAYwBmADMAYwA0ADUAZAA5ADkANQA1AGIAOQAxADgANABkAGIAZgBkAGQA
ZQBjADAALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgAEYARgBXACAAMgAwADEANwAAAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYQBmADMAMwBjAGMAYgA4AGMAZgAzAGMANAA1AGQAOQA5ADUANQBiADkA
MQA4ADQAZABiAGYAZABkAGUAYwAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADQAMwBiAGQAZAAwAGEAZQBhADYANQAxADQAMgBjADUAYQA5ADQAMQA4AGYA
NAA2ADMAOAAxADMAZQBhADMANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA1ADIAMwAuADIAMwA4ADkAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADIAMwAuADIAMwA4ADkAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACgNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="96"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get Access Code from URL"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{952d9cfc-7d9b-4acf-8699-adb8e65bc6ef}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get Access Code from URL"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f50b7982b1d24fbcbb4703426bd68b86"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_f50b7982b1d24fbcbb4703426bd68b86.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{aba5fb6e-c9ed-4644-9c34-e8b137ee696f}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4b996e902115484a8ba35ea98f100ada</RootNamespace><AssemblyName>ST_f50b7982b1d24fbcbb4703426bd68b86</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_4b996e902115484a8ba35ea98f100ada
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4b996e902115484a8ba35ea98f100ada</msb:CodeName>
		<msb:DisplayName>ST_4b996e902115484a8ba35ea98f100ada</msb:DisplayName>
		<msb:ProjectId>{AE3292DC-CE37-4320-A0BB-182090FACB20}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f50b7982b1d24fbcbb4703426bd68b86.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Settings.get_Default():ST_4b996e902115484a8ba35ea98f100ada.Properties.Sett" +
    "ings")]

namespace ST_4b996e902115484a8ba35ea98f100ada.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4b996e902115484a8ba35ea98f100ada")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_4b996e902115484a8ba35ea98f100ada")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4b996e902115484a8ba35ea98f100ada.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4b996e902115484a8ba35ea98f100ada.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPk//FkAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAgiwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADAsAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiAwAAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
LAAAAAAAAEgAAAACAAUAxCAAALQKAAABAAAAAAAAAHgrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADYCKBAAAAoWbxEAAAoqHgIoEgAACioeAigTAAAKKq5+AQAA
BC0ecgEAAHDQAwAAAigUAAAKbxUAAApzFgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKBcAAAoqLnMIAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAgAMAACN+AADsAwAA7AQAACNTdHJpbmdzAAAAANgIAAB0AAAAI1VTAEwJAAAQAAAAI0dVSUQA
AABcCQAAWAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAABsAAAAFAAAABgAA
AAkAAAABAAAAFwAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAAGgMBAAAA
AAAGAN0B4QMGAGwC4QMGACkBzgMPAFUEAAAGAFYBjwMGAMABjwMGAKEBjwMGAFMCjwMGAP0BjwMG
ABYCjwMGAG0BjwMGAIgBkAIKADECyQIKAKgAyQIGAEkDQgMGAAwBzgMGALoEQgMGALEDAQQGAKED
egMOANwABAMOAD0BBAMOAMQAZQMGAPEA4QMKAPICyQIGAHMAQgMGAE8AQgMGAOAEjwMAAAAAAQAA
AAAAAQABAAEAEABaAxIAOQABAAEAAAAQAAgEZARFAAEAAwAAARAAkwRkBFkAAwAHAAMBAACsBAAA
PQAEAAoAEQBOA08AEQCYAFMAEQA/AFcABgYKAFsAVoCcBF4AVoB4AF4AUCAAAAAAhgBgAwYAAQBe
IAAAAACGGMEDBgABAGYgAAAAAIMYwQMGAAEAbiAAAAAAkwitA2IAAQCaIAAAAACTCIAAZwABAKEg
AAAAAJMIjABsAAEAqSAAAAAAlgjBBHIAAgCwIAAAAACGGMEDBgACALggAAAAAJEYxwN3AAIAAAAB
AIoCCQDBAwEAEQDBAwYAGQDBAwoAKQDBAxAAMQDBAxAAOQDBAxAAQQDBAxAASQDBAxAAUQDBAxAA
WQDBAxAAYQDBAxAAaQDBAwYAgQDBAwYAqQDBAxUAuQDBAwYAcQCkBBsAwQDNBAEAcQDBAwYAiQDB
AwYAyQBhACAAyQDcBCcAkQDBAywAsQDBAwYACAAUAEUACAAYAEoAKQBzALIALgALAIoALgATAJMA
LgAbALIALgAjALsALgArAOQALgAzAOQALgA7AOoALgBDALsALgBLAPMALgBTAOQALgBbAA0BQwBj
AEoASQBzALIAYQB7AEoAYwBrAEoAAwABAAQAAwAAALEDewAAAKAAgAAAAMUEhQACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAHQZPEcAAAAAAAASAAAABAAAAAAAAAAAAAAAMwA2AAAAAAAO
AAAAAAAAAAAAAAA8AKoCAAAAAAQAAAAAAAAAAAAAADMAQgMAAAAAAAAAAAEAAAASBAAABQACAAAA
AAAAPE1vZHVsZT4AdmFsdWVfXwBTVF80Yjk5NmU5MDIxMTU0ODRhOGJhMzVlYTk4ZjEwMGFkYQBt
c2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
XzRiOTk2ZTkwMjExNTQ4NGE4YmEzNWVhOThmMTAwYWRhLmRsbABTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfNGI5OTZlOTAyMTE1NDg0YThiYTM1ZWE5OGYxMDBhZGEuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzRiOTk2ZTkwMjEx
NTQ4NGE4YmEzNWVhOThmMTAwYWRhLlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3Nl
bWJseQAAAAAAcVMAVABfADQAYgA5ADkANgBlADkAMAAyADEAMQA1ADQAOAA0AGEAOABiAGEAMwA1
AGUAYQA5ADgAZgAxADAAMABhAGQAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAMNlmdmruLlBgcLulPKvBfEABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAAS
YQYAARJlEWkEIAASbQYgAgEOEm0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0D
BhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRiOTk2ZTkw
MjExNTQ4NGE4YmEzNWVhOThmMTAwYWRhAAAFAQAAAAAIAQADRkZXAAAZAQAUQ29weXJpZ2h0IEAg
RkZXIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABYLAAAAAAAAAAAAAByLAAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZCwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAPEd0GQAAAQA8R3QZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAARgBGAFcAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8ANABiADkAOQA2AGUAOQAwADIAMQAxADUANAA4ADQAYQA4AGIAYQAzADUA
ZQBhADkAOABmADEAMAAwAGEAZABhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADYANQAxADYALgAxADgAMgAzADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8ANABiADkAOQA2AGUAOQAwADIAMQAxADUANAA4ADQAYQA4AGIAYQAzADUAZQBh
ADkAOABmADEAMAAwAGEAZABhAC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABGAEYAVwAgADIAMAAxADcAAAAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADQAYgA5ADkANgBlADkAMAAyADEAMQA1ADQAOAA0
AGEAOABiAGEAMwA1AGUAYQA5ADgAZgAxADAAMABhAGQAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA0AGIAOQA5ADYAZQA5ADAAMgAxADEANQA0ADgANABh
ADgAYgBhADMANQBlAGEAOQA4AGYAMQAwADAAYQBkAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAxADYALgAxADgAMgAzADYAAAAAAEYADwABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAxADYALgAxADgAMgAzADYA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAhDwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get RefreshToken and ExpirationDateTime"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7D29C043-9530-4420-AB52-594E4C8C2697}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get RefreshToken and ExpirationDateTime"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C9E0CDFB-300B-40F8-9838-E4DB8AF829AE}"
          SQLTask:SqlStatementSource="SELECT &#xA;&#x9;@paramConnectionToken = [ConnectionToken],&#xA;&#x9;@paramrefreshtoken= [RefreshToken], &#xA;&#x9;@pramexpirationdatetime= [ConnectionTokenExpirationDate],&#xA;&#x9;@paramInitialAccessTokenDateTime = ISNULL([InitialAccessTokenDateTime],'1900-01-01 00:00:000')&#xA;FROM &#xA;&#x9;[dbo].[OAuth2] &#xA;WHERE &#xA;&#x9;[InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramrefreshtoken"
            SQLTask:DtsVariableName="User::GetRefreshToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@pramexpirationdatetime"
            SQLTask:DtsVariableName="User::TokenExpirationDate"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramInitialAccessTokenDateTime"
            SQLTask:DtsVariableName="User::InitialAccessTokenDateTime"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramConnectionToken"
            SQLTask:DtsVariableName="User::GetAccessToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Save Tken Details on sys oAuth"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E3CBD4E6-0797-4354-A181-1D7317F92213}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Save Tken Details on sys oAuth"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C9E0CDFB-300B-40F8-9838-E4DB8AF829AE}"
          SQLTask:SqlStatementSource="Declare @ConnectionToken nvarchar(max) = @paccesstoken,&#xA;@ConnectionTokenExpirationDate datetime = @pexpirationdate,&#xA;@AuthorizationCode nvarchar(max) = @paccesscode,&#xA;@RefreshToken nvarchar(max)=@prefreshtoken,&#xA;@InitialAccessTokenDateTime DateTime = @paramInitialAccessTokenDateTime&#xA;&#xA;UPDATE [dbo].[OAuth2]&#xA;   SET [ConnectionToken] = @ConnectionToken&#xA;      ,[ConnectionTokenExpirationDate] = @ConnectionTokenExpirationDate&#xA;      ,[AuthorizationCode] = @AuthorizationCode&#xA;      ,[RefreshToken] = @RefreshToken&#xA;      ,[InitialAccessTokenDateTime] = @InitialAccessTokenDateTime&#xA;WHERE [InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paccesstoken"
            SQLTask:DtsVariableName="User::GetAccessToken"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@pexpirationdate"
            SQLTask:DtsVariableName="User::TokenExpirationDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paccesscode"
            SQLTask:DtsVariableName="User::AccessCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@prefreshtoken"
            SQLTask:DtsVariableName="User::GetRefreshToken"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramInitialAccessTokenDateTime"
            SQLTask:DtsVariableName="User::InitialAccessTokenDateTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{b0244f1f-232a-4832-b24e-90c077f7bd83}"
      DTS:From="Package\get Access Code from URL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Generate Access and Refresh Tokens" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{70270DBA-FAB7-46D3-92B9-4DB351A51EF4}"
      DTS:From="Package\Generate Access and Refresh Tokens"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Save Tken Details on sys oAuth" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{9839DF23-C633-4238-86C1-2B3D1E90DF70}"
      DTS:From="Package\get RefreshToken and ExpirationDateTime"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\get Access Code from URL" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="256,42"
          Id="Package\Generate Access and Refresh Tokens"
          TopLeft="114,272" />
        <NodeLayout
          Size="205,42"
          Id="Package\get Access Code from URL"
          TopLeft="142,181" />
        <NodeLayout
          Size="280,42"
          Id="Package\get RefreshToken and ExpirationDateTime"
          TopLeft="108,80" />
        <NodeLayout
          Size="229,42"
          Id="Package\Save Tken Details on sys oAuth"
          TopLeft="122,379" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="243.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="239.25,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="246.25,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>