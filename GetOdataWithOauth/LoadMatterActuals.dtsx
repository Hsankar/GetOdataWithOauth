<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/3/2017 5:19:48 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FFWLON-D13BZS"
  DTS:CreatorName="FFWUK\HK2"
  DTS:DelayValidation="True"
  DTS:DTSID="{72AD05F9-E192-4799-BE59-5724E2D17AB9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="2057"
  DTS:ObjectName="LoadMatterActuals"
  DTS:PackageType="5"
  DTS:VersionBuild="117"
  DTS:VersionGUID="{5EAA4F4A-718E-461F-86B6-C76E04DA9C1B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DF1998A-F154-4EED-8037-0A4CA686CAD2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BaseUrl">
      <DTS:VariableValue
        DTS:DataType="8">https://fieldfisher-test01.sandbox.operations.dynamics.com/data/Integration_V0_MatterActuals?cross-company=true</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26D63756-8CA3-4E54-99FB-6974541871B4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::WebMethod_NextLink] == &quot;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Counter">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8ACBA65A-A9F3-4F46-BD83-E5AE28B95455}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetAccessToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60A5BEDA-1DF6-4518-B447-97BC9ED097B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetRefreshToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D814FE7-5BBC-4F09-94D2-C3EED2E26809}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_Data">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D0CE853-1196-477C-82C6-4378E055702D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42F8BB7E-265D-4D49-8DB7-3D917ED09D8A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewExecutionID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DED0DA2B-C2F2-4702-9CE2-91319BC6A38A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NotificationEmailAddresses">
      <DTS:VariableValue
        DTS:DataType="8">harisankar.kurimineni@fieldfisher.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DCF2E2C-BD42-4616-8953-975B179CBA3A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PageSize">
      <DTS:VariableValue
        DTS:DataType="3">10000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80484F34-0043-4422-93C1-12ACA79ABA7D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProjMaxDateTime">
      <DTS:VariableValue
        DTS:DataType="8">2017-06-01T12:00:00Z</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C38BF802-56BE-4323-8906-808E64E6A76E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponceStatus">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55B3237D-D3D1-43E5-BE00-1B7816504B78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D056F165-6E65-4173-AD21-0AFA4E5BA6D0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SkipPages">
      <DTS:VariableValue
        DTS:DataType="3">10000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E01EB4E-F6E5-405E-9D37-B77FCF7CF498}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TokenExpirationDate">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BA6CB57-F85E-4451-B2F6-BF2709B6E0E1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseUrl]+&quot;&amp;$filter=ProjTransDate ge &quot;+ @[User::ProjMaxDateTime] +&quot;&amp;$count=true&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WebMethod">
      <DTS:VariableValue
        DTS:DataType="8">https://fieldfisher-test01.sandbox.operations.dynamics.com/data/Integration_V0_MatterActuals?cross-company=true&amp;$filter=ProjTransDate ge 2017-06-01T12:00:00Z&amp;$count=true</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05CA2670-9BE5-4D5D-98E3-AA4DF54E29D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WebMethod_NextLink">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\For Loop Container"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{47FFEA35-1B80-4700-A078-2CE3E5B000C5}"
      DTS:EvalExpression="true"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="For Loop Container">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="EvalExpression">@[User::Counter] ? "true" : "false"</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Access Token Validation"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{552E09D9-8F79-43B1-9DEE-4A375ABBC6FE}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Access Token Validation"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="1 == 1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Generate Access and Refresh Token"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{e1d565bc-6ff6-491b-b724-1831fdb92a3e}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Access and Refresh Token"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>GetAccessToken.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>pExecutionID</ParameterName>
                <BindedVariableOrParameterName>User::NewExecutionID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>pResponceStatus</ParameterName>
                <BindedVariableOrParameterName>User::ResponceStatus</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Get JSON Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{4ebcdfe4-189f-46b5-869d-d40ea0c787c3}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get JSON Data"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5fb8622b26cd41beb4b1f52a3f8363bc"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::GetAccessToken,User::NewExecutionID,User::WebMethod,$Project::ppDLLPath,$Project::ppRestsharpDLLName,$Project::ppNewtonJsonDLLName"
              ReadWriteVariables="User::JSON_Data,User::PageSize,User::RowCount,User::SkipPages,User::WebMethod_NextLink">
              <ProjectItem
                Name="ST_5fb8622b26cd41beb4b1f52a3f8363bc.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D3AB6AEB-FCCC-4319-958C-78FC8E7609A0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a1fee0f727294c9189165e4ae64ef2db</RootNamespace>
    <AssemblyName>ST_5fb8622b26cd41beb4b1f52a3f8363bc</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.IdentityModel\3.5.0.0__31bf3856ad364e35\Microsoft.IdentityModel.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL" />
    <Reference Include="RestSharp, Version=106.0.0.0, Culture=neutral, PublicKeyToken=598062e77f915f75, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\hk2\source\repos\RestSharp\RestSharp\bin\Debug\net452\RestSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>PublicSettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="RestSharp" version="105.2.3" targetFramework="net45" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ST_a1fee0f727294c9189165e4ae64ef2db.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Specialized;
using System.IO;
using System.Net;
using System.Web.Configuration;
using System.Text;
using RestSharp;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using System.Data.SqlClient;
using System.Reflection;



#endregion

namespace ST_a1fee0f727294c9189165e4ae64ef2db
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        public ScriptMain()
        {

            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve1);
        }
        public Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            string name = (string)Dts.Variables["$Project::ppRestsharpDLLName"].Value;
            if (args.Name.Contains(name))
            {
                string path = (string)Dts.Variables["$Project::ppDLLPath"].Value;
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, name + ".dll"));

            }

            return null;
        }
        public Assembly CurrentDomain_AssemblyResolve1(object sender, ResolveEventArgs args)
        {
            string name = (string)Dts.Variables["$Project::ppNewtonJsonDLLName"].Value;
            if (args.Name.Contains(name))
            {
                string path = (string)Dts.Variables["$Project::ppDLLPath"].Value;
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, name + ".dll"));

            }

            return null;
        }
        public void Main()
		{
            string executionID = (string)Dts.Variables["User::NewExecutionID"].Value;
            string ResponceStatus;//= (string)Dts.Variables["User::ResponceStatus"].Value;
            string AccessToken = (string)Dts.Variables["User::GetAccessToken"].Value;
            string WebMethod = (string)Dts.Variables["User::WebMethod"].Value;
            string WebMethod_NextLink = (string)Dts.Variables["User::WebMethod_NextLink"].Value;
            int RowCount = (int)Dts.Variables["User::RowCount"].Value;
            int PageSize = (int)Dts.Variables["User::PageSize"].Value;
            int SkipPages = (int)Dts.Variables["User::SkipPages"].Value;
            string URI;

            try
            {
                if (WebMethod_NextLink == "")
                {
                    if (RowCount == 0)
                    {
                        URI = WebMethod;
                    }
                    else
                    {
                        URI = WebMethod + "&$skip=" + SkipPages + "&$top=" + PageSize;
                    }
                }
                else
                {
                    URI = WebMethod_NextLink;
                }
                // TODO: Add your code here
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;

                //GetAccessToken();
                var client = new RestClient(URI);
                var request = new RestRequest(Method.GET);
                request.AddHeader("cache-control", "no-cache");
                request.AddHeader("authorization", "Bearer " + AccessToken);
                //request.Timeout = 550000;
                //var response = client.Execute(request) as RestResponse;
                IRestResponse response = client.Execute(request);

                ResponceStatus = response.StatusCode.ToString();
                string statusdesc = response.ResponseStatus.ToString();
                if(ResponceStatus == "OK")
                {
                    string Json_data = response.Content;
                    Dts.Variables["User::JSON_Data"].Value = Json_data;

                    var data = (JObject)JsonConvert.DeserializeObject(response.Content);

                    if ((data["@odata.count"].Value<int>() - SkipPages) < PageSize)
                    {
                        //Do nothing ......
                    }
                    else
                    {
                        var odata_nextLink = data["@odata.nextLink"].Value<string>();
                        Dts.Variables["User::WebMethod_NextLink"].Value = odata_nextLink;
                        Dts.Variables["User::SkipPages"].Value = SkipPages + PageSize;
                    }

                    Variables lockedVariables = null;
                    Dts.VariableDispenser.LockOneForWrite("User::ResponceStatus", ref lockedVariables);
                    lockedVariables["User::ResponceStatus"].Value = ResponceStatus;
                    lockedVariables.Unlock();

                    Dts.TaskResult = (int)ScriptResults.Success;
                }
                else
                {
                        Variables lockedVariables = null;
                        Dts.VariableDispenser.LockOneForWrite("User::ResponceStatus", ref lockedVariables);
                        lockedVariables["User::ResponceStatus"].Value = ResponceStatus;
                        lockedVariables.Unlock();
                       
                        LogError(executionID, ResponceStatus+" "+ statusdesc);
                        Dts.TaskResult = (int)ScriptResults.Failure;
                    }
            }
            catch (Exception ex)
            {
                LogError(executionID, ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }
        public void LogError(string executionID, string ErrorMessage)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;
            //Use the connection in some code here, then release the connection
            string query = "EXECUTE [etl].[usp_ETL_ErrorLogging] '" + ErrorMessage + "','" + executionID+"'";
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();
            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="app.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
    </configSections>
</configuration>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_5fb8622b26cd41beb4b1f52a3f8363bc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_5fb8622b26cd41beb4b1f52a3f8363bc</msb:DisplayName>
		<msb:ProjectId>{D45E0CBE-738A-43EF-AE86-4BF96D8E49F3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5fb8622b26cd41beb4b1f52a3f8363bc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="app.config"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a1fee0f727294c9189165e4ae64ef2db")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_a1fee0f727294c9189165e4ae64ef2db")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)">
  <Profiles />
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a1fee0f727294c9189165e4ae64ef2db.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a1fee0f727294c9189165e4ae64ef2db.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a1fee0f727294c9189165e4ae64ef2db.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a1fee0f727294c9189165e4ae64ef2db.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a1fee0f727294c9189165e4ae64ef2db.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5fb8622b26cd41beb4b1f52a3f8363bc.dll">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
dyUAAAAAkwjyAYwBBwB/JQAAAACWCJAIkgEIAIYlAAAAAIYYEAcGAAgAjiUAAAAAkRgWB5cBCAAA
AAEAhAYAAAIACggAAAEAhAYAAAIACggAAAEAPQAAAAIAVQEAAAEAQQQJABAHAQARABAHBgAZABAH
CgApABAHEAAxABAHEAA5ABAHEABBABAHEABJABAHEABRABAHEABZABAHEABhABAHEABpABAHBgDZ
ABAHBgD5ABAHFQABARAHBgAJARAHGwBxABAHBgAZAZIFIQAhARAHJwAZAUcELQBxADsIOAApAeIH
PgC5AFUFQwAxAS0ESgCJAJgBTgA5AQ8IUgA5AWQIVwBBAcEBVwB5AI8BXQA5AQ4JggA5AWQIiABR
AUAFjgBhARAHEACRABAHlQCRAHoGnABhASUEpACZACsBrACBAJMETgCZAFEIsQCZAMwITgAxATcE
tgB5AXMIuwCxAFUFwACJATsExwApAfEG3QCZAWUC4wC5AKEEBgApAZwIAQA5AWQI6wDBAEkBTgAp
ASMI+AChAVUF/gApAc4FSgCpAfAFBQE5AWQICgGxARAHEAG5Af4IFwGpAQIGtgCBABAHBgDBAX0B
GwHBAfEIJAHhABAHKQERARAHBgDRAfIAMAEIABQAXQEIABgAYgEpAHMA0gEuAAsAqgEuABMAswEu
ABsA0gEuACMA2wEuACsABAIuADMABAIuADsACgIuAEMA2wEuAEsAEwIuAFMABAIuAFsALQJDAGMA
YgFJAHMA0gFjAGsAYgGDAHsAYgGDAIMAdwI0AGMA8gADAAEABAADAAAAjwabAQAABgKgAQAAlAil
AQIABwADAAIACAAFAAEACQAFAAIACgAHAASAAAABAAAAhRm/WwAAAAAAALMAAAAEAAAAAAAAAAAA
AAA5AaoAAAAAAA0AAAAAAAAAAAAAAEIBqAQAAAAAagAAAAAAAAAAAAAASwFbBgAAAAAEAAAAAAAA
AAAAAAA5AV4FAAAAAAgAAAAAAAAAAAAAAFQBPwYAAAAADQAAAAAAAAAAAAAAQgFTAAAAAAAEAAAA
AAAAAAAAAAA5AXoAAAAAAAAAAAABAAAAYQcAAAUAAgBZANUAWQDZAAAAAElFbnVtZXJhYmxlYDEA
Q3VycmVudERvbWFpbl9Bc3NlbWJseVJlc29sdmUxAEludDMyADxNb2R1bGU+AGV4ZWN1dGlvbklE
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0u
RGF0YQBTVF9hMWZlZTBmNzI3Mjk0YzkxODkxNjVlNGFlNjRlZjJkYgBtc2NvcmxpYgBTVF81ZmI4
NjIyYjI2Y2Q0MWJlYjRiMWY1MmEzZjgzNjNiYwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBT
eW5jaHJvbml6ZWQARGJDb21tYW5kAFNxbENvbW1hbmQATWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfU3RhdHVzQ29kZQBIdHRwU3RhdHVzQ29kZQBnZXRfTWVzc2FnZQBFcnJvck1lc3NhZ2UAVmFy
aWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05h
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFNlY3VyaXR5UHJvdG9j
b2xUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBJUmVzdFJl
c3BvbnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tPbmVGb3JXcml0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBFeGVjdXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAYWRk
X0Fzc2VtYmx5UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZmI4NjIyYjI2Y2Q0MWJlYjRi
MWY1MmEzZjgzNjNiYy5kbGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4ASlRva2VuAFNjcmlwdE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9t
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9UcmFuc2Fj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNlQ29ubmVjdGlv
bgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29mdC5K
c29uAEN1bHR1cmVJbmZvAFJlc3RTaGFycABOZXd0b25zb2Z0Lkpzb24uTGlucQBBZGRIZWFkZXIA
c2VuZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAU2VydmljZVBvaW50
TWFuYWdlcgBSZXNvbHZlRXZlbnRIYW5kbGVyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9W
YXJpYWJsZURpc3BlbnNlcgBMb2dFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hMWZl
ZTBmNzI3Mjk0YzkxODkxNjVlNGFlNjRlZjJkYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfYTFmZWUwZjcyNzI5NGM5MTg5MTY1ZTRhZTY0ZWYyZGIuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFJlc29sdmVFdmVudEFyZ3MAYXJncwBDb250
YWlucwBFeHRlbnNpb25zAGdldF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBnZXRfUmVzcG9uc2VTdGF0dXMAQ29uY2F0AEpPYmplY3QARGVzZXJpYWxpemVPYmplY3QA
U3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQAUmVzdENsaWVudABnZXRfQ29udGVudABKc29uQ29udmVydABJUmVzdFJlcXVlc3QAZ2V0X0Fz
c2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBvcF9FcXVhbGl0eQAAAAA5JABQAHIAbwBqAGUAYwB0ADoA
OgBwAHAAUgBlAHMAdABzAGgAYQByAHAARABMAEwATgBhAG0AZQAAJyQAUAByAG8AagBlAGMAdAA6
ADoAcABwAEQATABMAFAAYQB0AGgAAAkuAGQAbABsAAA7JABQAHIAbwBqAGUAYwB0ADoAOgBwAHAA
TgBlAHcAdABvAG4ASgBzAG8AbgBEAEwATABOAGEAbQBlAAApVQBzAGUAcgA6ADoATgBlAHcARQB4
AGUAYwB1AHQAaQBvAG4ASQBEAAApVQBzAGUAcgA6ADoARwBlAHQAQQBjAGMAZQBzAHMAVABvAGsA
ZQBuAAAfVQBzAGUAcgA6ADoAVwBlAGIATQBlAHQAaABvAGQAADFVAHMAZQByADoAOgBXAGUAYgBN
AGUAdABoAG8AZABfAE4AZQB4AHQATABpAG4AawAAHVUAcwBlAHIAOgA6AFIAbwB3AEMAbwB1AG4A
dAAAHVUAcwBlAHIAOgA6AFAAYQBnAGUAUwBpAHoAZQAAH1UAcwBlAHIAOgA6AFMAawBpAHAAUABh
AGcAZQBzAAABAA8mACQAcwBrAGkAcAA9AAANJgAkAHQAbwBwAD0AABtjAGEAYwBoAGUALQBjAG8A
bgB0AHIAbwBsAAERbgBvAC0AYwBhAGMAaABlAAEbYQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAA
D0IAZQBhAHIAZQByACAAAAVPAEsAAB9VAHMAZQByADoAOgBKAFMATwBOAF8ARABhAHQAYQAAGUAA
bwBkAGEAdABhAC4AYwBvAHUAbgB0AAAfQABvAGQAYQB0AGEALgBuAGUAeAB0AEwAaQBuAGsAAClV
AHMAZQByADoAOgBSAGUAcwBwAG8AbgBjAGUAUwB0AGEAdAB1AHMAAAMgAAAPQQBEAE8AQwBvAG4A
bgAATUUAWABFAEMAVQBUAEUAIABbAGUAdABsAF0ALgBbAHUAcwBwAF8ARQBUAEwAXwBFAHIAcgBv
AHIATABvAGcAZwBpAG4AZwBdACAAJwABBycALAAnAAEDJwABcVMAVABfAGEAMQBmAGUAZQAwAGYA
NwAyADcAMgA5ADQAYwA5ADEAOAA5ADEANgA1AGUANABhAGUANgA0AGUAZgAyAGQAYgAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAEwZRahFCwlDmslRQvUBUuUABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXkFIAIBDg4FAAASgI0FIAIBHBgGIAEBEoCRAwcBDgUgABKA
lQQgABJdBiABEoCZHAMgABwDIAAOBCABAg4FAAIODg4FAAESPQ4eBxQODg4ODggICA4SSRJNDhFR
EVUOElkSXQ4SXRJhBQACAg4OBQABDh0cBgABARGArQYgAQERgLUHIAISgLkODgcgARJNEoC5BCAA
EVEEIAARVQQgAQEcBAABHA4GIAESgMEODRABAR4AFRKAyQESgMEDCgEIAwoBDgUgABKAzQcgAgEO
EBJdBgADDg4ODgUHAhwSZQUgABKA0QYgARKA1RwEIAEcHAUAAQ4dDgYgAgEOEmUDIAAICAABEoDh
EYDlBCAAEj0GIAIBDhI9CAABEoDpEoDpCLd6XFYZNOCJCImEXc2AgMyRCFmAYud/kV91CDCtT+ay
pq7tBAAAAAAEAQAAAAMGEnEDBhJ1AwYSEAIGCAMGERQHIAISPRwSRQQAABJxBAAAEnUFAAEBEnUE
AAASEAMAAAEECAAScQQIABJ1BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NUX2ExZmVlMGY3MjcyOTRjOTE4OTE2NWU0YWU2NGVmMmRiAAAF
AQAAAAAIAQADRkZXAAAZAQAUQ29weXJpZ2h0IEAgRkZXIDIwMTcAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
WQEAS01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uRWRpdG9ycy5TZXR0aW5nc0Rlc2lnbmVyLlNldHRp
bmdzU2luZ2xlRmlsZUdlbmVyYXRvcggxNC4wLjAuMAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGg8AAAAAAAA
AAAAAII8AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0PAAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAJgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAL9bhRkAAAEAv1uFGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAEYARgBXAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAMQBmAGUAZQAwAGYANwAyADcAMgA5ADQAYwA5ADEAOAA5ADEANgA1AGUANABhAGUA
NgA0AGUAZgAyAGQAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADUAMwAzAC4AMgAzADQAOAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADUAZgBiADgANgAyADIAYgAyADYAYwBkADQAMQBiAGUAYgA0AGIAMQBmADUAMgBhADMAZgA4
ADMANgAzAGIAYwAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAARgBGAFcAIAAyADAAMQA3AAAAAAAqAAEAAQBMAGUAZwBh
AGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA1AGYAYgA4ADYAMgAyAGIAMgA2AGMAZAA0ADEAYgBlAGIANABi
ADEAZgA1ADIAYQAzAGYAOAAzADYAMwBiAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AYQAxAGYAZQBlADAAZgA3ADIANwAyADkANABjADkAMQA4ADkAMQA2
ADUAZQA0AGEAZQA2ADQAZQBmADIAZABiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADUAMwAzAC4AMgAzADQAOAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADUAMwAzAC4AMgAzADQAOAA3AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJQ8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\GetNewAccessToken"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6dd6ce5c-d9e4-4918-87c5-a57494e3b84a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GetNewAccessToken"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
              SQLTask:SqlStatementSource="SELECT &#xA; @paramaccesstoken = [ConnectionToken],&#xA; @paramrefreshtoken = [RefreshToken], &#xA; @paramexpirationdate = [ConnectionTokenExpirationDate]&#xA;FROM &#xA; [dbo].[OAuth2] &#xA;WHERE &#xA; [InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@paramaccesstoken"
                SQLTask:DtsVariableName="User::GetAccessToken"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@paramrefreshtoken"
                SQLTask:DtsVariableName="User::GetRefreshToken"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@paramexpirationdate"
                SQLTask:DtsVariableName="User::TokenExpirationDate"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="6"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For Loop Container\Load Data into MDB"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5f29c19e-bab5-4822-8d63-ebebf25a939c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Data into MDB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
              SQLTask:SqlStatementSource="Declare @DATA nvarchar(max) = @param1&#xA;&#xA;EXEC usp_SSISLoadMatterActuals @DATA" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@param1"
                SQLTask:DtsVariableName="User::JSON_Data"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{37A22AD5-2426-42AB-9EE5-79C8962BEC50}"
          DTS:EvalOp="3"
          DTS:Expression="DATEDIFF( &quot;mi&quot;, GETDATE() , @[User::TokenExpirationDate] ) &lt;= 5"
          DTS:From="Package\For Loop Container\Access Token Validation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\For Loop Container\Generate Access and Refresh Token" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D731435E-CB66-40B8-8CBD-8D4DB19E8469}"
          DTS:From="Package\For Loop Container\Generate Access and Refresh Token"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\For Loop Container\GetNewAccessToken" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{bd6a876c-d0e3-4991-9779-7f35c25433d2}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::JSON_Data] !=&quot;&quot; &amp;&amp;  @[User::ResponceStatus] == &quot;OK&quot;"
          DTS:From="Package\For Loop Container\Get JSON Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\For Loop Container\Load Data into MDB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{64AAD598-D75F-4818-89C1-37BE04CA20FB}"
          DTS:EvalOp="3"
          DTS:Expression="DATEDIFF( &quot;mi&quot;, GETDATE() , @[User::TokenExpirationDate] ) &gt; 5"
          DTS:From="Package\For Loop Container\Access Token Validation"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\For Loop Container\Get JSON Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{285BF7AC-CA92-4917-84C1-30ABA3BACC6E}"
          DTS:From="Package\For Loop Container\GetNewAccessToken"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\For Loop Container\Get JSON Data" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate Access and Refresh Token"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{8B8068D8-D135-42E0-8570-4908EDBE848F}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Access and Refresh Token"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>GetAccessToken.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>pExecutionID</ParameterName>
            <BindedVariableOrParameterName>User::NewExecutionID</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Max ProjTransDateTime"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9f8b3581-d5fb-4112-98c4-218be9c810b3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Max ProjTransDateTime"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
          SQLTask:SqlStatementSource="DECLARE @MaxDateTime nvarchar(max) &#xA;SELECT &#xA; @MaxDateTime = convert(nvarchar(max),ISNULL(MAX(ProjTransDate),'2017-06-01 12:00:000'),20 )&#xA;FROM [dbo].[MattersActuals1]&#xA;&#xA;DELETE FROM [dbo].[MattersActuals1] WHERE ProjTransDate = @MaxDateTime&#xA;&#xA;SELECT @param1 = CONCAT((REPLACE(@MaxDateTime,' ','T')),'Z')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@param1"
            SQLTask:DtsVariableName="User::ProjMaxDateTime"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\GetNewAccessToken"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BBA0B665-84BF-45C4-9ABC-66C0C61EBD2F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="GetNewAccessToken"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
          SQLTask:SqlStatementSource="SELECT &#xA;&#x9;@paramaccesstoken = [ConnectionToken],&#xA;&#x9;@paramrefreshtoken = [RefreshToken], &#xA;&#x9;@paramexpirationdate = [ConnectionTokenExpirationDate]&#xA;FROM &#xA;&#x9;[dbo].[OAuth2] &#xA;WHERE &#xA;&#x9;[InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramaccesstoken"
            SQLTask:DtsVariableName="User::GetAccessToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramrefreshtoken"
            SQLTask:DtsVariableName="User::GetRefreshToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramexpirationdate"
            SQLTask:DtsVariableName="User::TokenExpirationDate"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Start"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ED672ECB-945D-4323-8A22-BC5BF5B8B7A0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Start"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
          SQLTask:SqlStatementSource="EXEC [etl].[usp_ETL_ExecutionNewID] @parampackagename, @paramnewexecutioid OUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@parampackagename"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramnewexecutioid"
            SQLTask:DtsVariableName="User::NewExecutionID"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Status - Success END"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2dec06b4-2380-4ee0-98d2-931a6ab82c3e}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Status - Success END"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9ff15100ec354b7eb84f64e852ec1b27"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::NewExecutionID,User::NotificationEmailAddresses,System::PackageName,User::ResponceStatus">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Settings.get_Default():ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Sett" +
    "ings")]

namespace ST_9ff15100ec354b7eb84f64e852ec1b27.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_9ff15100ec354b7eb84f64e852ec1b27.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8D2AEFBE-FED9-4A83-B5DE-26BBF60208E0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9ff15100ec354b7eb84f64e852ec1b27</RootNamespace>
    <AssemblyName>ST_9ff15100ec354b7eb84f64e852ec1b27</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

namespace ST_9ff15100ec354b7eb84f64e852ec1b27
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string executionID = (string)Dts.Variables["User::NewExecutionID"].Value;
            string EmailAddresses = (string)Dts.Variables["User::NotificationEmailAddresses"].Value; ;
            string PackageName = (string)Dts.Variables["System::PackageName"].Value; ;
           
            string EmailMessage = "Rule: "+ PackageName + "<br>"
                + "Status: Success <br>";

            UpdateStatus(executionID);
            SendEmail(EmailAddresses, EmailMessage, PackageName);
            Dts.TaskResult = (int)ScriptResults.Success;
		}
        public void UpdateStatus(string executionID)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;

            string query = "EXECUTE [etl].[usp_ETL_ExecutionStatusUpdate] '" + executionID + "', 1 , 'Successfully Loaded'";
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();

            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }
        public void SendEmail(string EmailAddresses, string EmailMessage, string PackageName)
        {
            MailMessage mail = new MailMessage();
            SmtpClient SmtpServer = new SmtpClient("mail.fieldfisher.com");

            mail.From = new MailAddress("IntegrationSupport@fieldfisher.com");
            mail.To.Add(EmailAddresses);
            mail.Subject = PackageName;
            mail.Body = EmailMessage;
            mail.IsBodyHtml = true;

            SmtpServer.Send(mail);

        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_9ff15100ec354b7eb84f64e852ec1b27</msb:CodeName>
		<msb:DisplayName>ST_9ff15100ec354b7eb84f64e852ec1b27</msb:DisplayName>
		<msb:ProjectId>{CE66EC3D-5CE5-48E7-ABAF-02F5DA0F2C82}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9ff15100ec354b7eb84f64e852ec1b27.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9ff15100ec354b7eb84f64e852ec1b27")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_9ff15100ec354b7eb84f64e852ec1b27")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9ff15100ec354b7eb84f64e852ec1b27.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9ff15100ec354b7eb84f64e852ec1b27.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9ff15100ec354b7eb84f64e852ec1b27.dll">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
NAUQAEkANAUQAFEANAUQAFkANAUQAGEANAUQAGkANAUGAJkANAUGALkANAUVAMkANAUGAHEAUAYi
ANEABgYnANkAHwQsAOEALQMyAOkAcwY2ANEAmQYBANEALAZDAPEAHwRIANEAfgQyAPkAtgROAAEB
NAVTAAkB3wZaAPkAyAReAIkANAUGABEBNAUQABkBNAUQAIkALwRoAIkA+wRvACEBdgAQAIkAgQYQ
AIkAyQYQAIkAEAR1ABEBjwB6AHEANAUGAHkANAUGACkB2ACAACkB0gaJAKEANAWPAMEANAUGAAgA
FACpAAgAGACuACkAcwAdAS4ACwD1AC4AEwD+AC4AGwAdAS4AIwAmAS4AKwBPAS4AMwBPAS4AOwBV
AS4AQwAmAS4ASwBeAS4AUwBPAS4AWwB4AUMAYwCuAEkAcwAdAWEAewCuAGMAawCuABsAPQBjAAMA
AQAEAAMAAAASBeYAAABDAesAAACRBvAAAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcABIAAAAEAAACF
GRBcAAAAAAAAAQAAAAQAAAAAAAAAAAAAAJcAbQAAAAAADQAAAAAAAAAAAAAAoABeAwAAAAAEAAAA
AAAAAAAAAACXAGEAAAAAAAQAAAAAAAAAAAAAAJcAKAQAAAAADQAAAAAAAAAAAAAAoAA6AAAAAAAA
AAAAAQAAAIUFAAAFAAIAAAAAAABTVF85ZmYxNTEwMGVjMzU0YjdlYjg0ZjY0ZTg1MmVjMWIyNwA8
TW9kdWxlPgBleGVjdXRpb25JRABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVf
XwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBBZGQARGJDb21tYW5kAFNxbENvbW1hbmQAU2VuZABkZWZh
dWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UARW1haWxNZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFBhY2thZ2VOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRFbWFpbABTVF85ZmYx
NTEwMGVjMzU0YjdlYjg0ZjY0ZTg1MmVjMWIyNy5kbGwAc2V0X0lzQm9keUh0bWwAZ2V0X0l0ZW0A
U3lzdGVtAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ATWFpbEFkZHJlc3NDb2xsZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25u
ZWN0aW9uAFNxbENvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAGdldF9UbwBDdWx0dXJlSW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUXzlmZjE1MTAwZWMzNTRiN2ViODRmNjRlODUyZWMxYjI3LlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF85ZmYxNTEwMGVjMzU0YjdlYjg0ZjY0
ZTg1MmVjMWIyNy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARW1haWxBZGRyZXNzZXMAU2V0dGlu
Z3MAZ2V0X0Nvbm5lY3Rpb25zAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAFVwZGF0ZVN0YXR1cwBDb25jYXQAT2JqZWN0AHNldF9TdWJqZWN0AGdldF9EZWZhdWx0AHNl
dF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABTbXRwQ2xpZW50AHNldF9Cb2R5AGdl
dF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAAAApVQBzAGUAcgA6ADoATgBlAHcARQB4AGUAYwB1
AHQAaQBvAG4ASQBEAABBVQBzAGUAcgA6ADoATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4ARQBtAGEA
aQBsAEEAZABkAHIAZQBzAHMAZQBzAAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBh
AG0AZQAADVIAdQBsAGUAOgAgAAAxPABiAHIAPgBTAHQAYQB0AHUAcwA6ACAAUwB1AGMAYwBlAHMA
cwAgADwAYgByAD4AAA9BAEQATwBDAG8AbgBuAABfRQBYAEUAQwBVAFQARQAgAFsAZQB0AGwAXQAu
AFsAdQBzAHAAXwBFAFQATABfAEUAeABlAGMAdQB0AGkAbwBuAFMAdABhAHQAdQBzAFUAcABkAGEA
dABlAF0AIAAnAAE5JwAsACAAMQAgACwAIAAnAFMAdQBjAGMAZQBzAHMAZgB1AGwAbAB5ACAATABv
AGEAZABlAGQAJwABKW0AYQBpAGwALgBmAGkAZQBsAGQAZgBpAHMAaABlAHIALgBjAG8AbQAARUkA
bgB0AGUAZwByAGEAdABpAG8AbgBTAHUAcABwAG8AcgB0AEAAZgBpAGUAbABkAGYAaQBzAGgAZQBy
AC4AYwBvAG0AAHFTAFQAXwA5AGYAZgAxADUAMQAwADAAZQBjADMANQA0AGIANwBlAGIAOAA0AGYA
NgA0AGUAOAA1ADIAZQBjADEAYgAyADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAAA3a0jR8zbZMkzb80GpaiyAABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkG
BwQODg4OBCAAEmkEIAASbQUgARJxHAMgABwGAAMODg4OBQcCHBJBBCAAEnkFIAESfRwEIAEcHAYg
AgEOEkEDIAAIBCABARwEBwESRQYgAQESgI0FIAASgJEEIAEBAgUgAQESRQgAARKAlRGAmQUgABKA
nQcgAgEOEoCdCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQG
IAMBDg4OBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOWZmMTUxMDBlYzM1
NGI3ZWI4NGY2NGU4NTJlYzFiMjcAAAUBAAAAAAgBAANGRlcAABkBABRDb3B5cmlnaHQgQCBGRlcg
MjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA8MwAAAAAAAAAAAABWMwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAASDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAEFyFGQAAAQAQXIUZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAARgBGAFcAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBUAF8AOQBmAGYAMQA1ADEAMAAwAGUAYwAzADUANABiADcAZQBiADgANABmADYANABl
ADgANQAyAGUAYwAxAGIAMgA3AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADYANQAzADMALgAyADMANQA2ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8AOQBmAGYAMQA1ADEAMAAwAGUAYwAzADUANABiADcAZQBiADgANABmADYANABlADgA
NQAyAGUAYwAxAGIAMgA3AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABGAEYAVwAgADIAMAAxADcAAAAAACoAAQABAEwA
ZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBs
AEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADkAZgBmADEANQAxADAAMABlAGMAMwA1ADQAYgA3AGUA
YgA4ADQAZgA2ADQAZQA4ADUAMgBlAGMAMQBiADIANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAFQAXwA5AGYAZgAxADUAMQAwADAAZQBjADMANQA0AGIANwBlAGIA
OAA0AGYANgA0AGUAOAA1ADIAZQBjADEAYgAyADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYANQAzADMALgAyADMANQA2ADgAAAAAAEYADwABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAzADMALgAyADMANQA2ADgAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAaDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2A3E47A4-C979-45B0-A32D-239CFFB9301E}"
      DTS:From="Package\Get Max ProjTransDateTime"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\For Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{AD8D6140-9D30-4022-9ADA-503742AA7D29}"
      DTS:From="Package\Generate Access and Refresh Token"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\GetNewAccessToken" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{0BC1E4DB-C9B5-4148-B177-E76456A3BB4C}"
      DTS:From="Package\Start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Generate Access and Refresh Token" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{329ECAA4-810D-4441-9689-E465AC36448D}"
      DTS:From="Package\GetNewAccessToken"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Get Max ProjTransDateTime" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{C3F9C498-97D0-4EC4-8636-6BAF7D652EDB}"
      DTS:From="Package\For Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update Status - Success END" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{A63E30A3-F7BD-44F2-B0EC-51B9AA64B768}"
      DTS:EventID="7602275"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{85386E91-72B4-4715-AF4C-46DE243F2B2A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Error Logging and Update Status - Failure"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{37353332-751B-4523-8DF6-175B5ABF1E1E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error Logging and Update Status - Failure">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_33070721c6964b12807c1e4eab6557ec"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::ErrorDescription,System::SourceName,User::NewExecutionID,User::NotificationEmailAddresses,System::PackageName,User::ResponceStatus">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33070721c6964b12807c1e4eab6557ec.Properties.Settings.get_Default():ST_33070721c6964b12807c1e4eab6557ec.Properties.Sett" +
    "ings")]

namespace ST_33070721c6964b12807c1e4eab6557ec.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[ #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

namespace ST_33070721c6964b12807c1e4eab6557ec
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{

		public void Main()
		{
            string executionID = (string)Dts.Variables["User::NewExecutionID"].Value;
            string ErrorMessage = (string)Dts.Variables["System::ErrorDescription"].Value;
            string SourceName = (string)Dts.Variables["System::SourceName"].Value;
            string PackageName = (string)Dts.Variables["System::PackageName"].Value;
            string ResponceStatus = (string)Dts.Variables["User::ResponceStatus"].Value; 
            string EmailAddresses = (string)Dts.Variables["User::NotificationEmailAddresses"].Value;
            string EmailMessage;

            LogError(executionID, "PackageName: " + PackageName+ " SourceName:" + SourceName + " ErrorMessage:" + ErrorMessage +" "+ ResponceStatus);
            if(ResponceStatus == "0")
            {
                EmailMessage = "Rule Name: " + PackageName + "<br>"
                               + "Status: Terminated <br>"
                               + "Status Description: Connection TimedOut <br>"
                               + "<h4>Execute SQL Agent job again to continue ETL Process</h4>";
                UpdateStatus(executionID, 3, "Connection TimedOut - ReExecute Package again");
                SendEmail(EmailAddresses, EmailMessage, PackageName);
            }
            else
            {
                EmailMessage = "Rule Name: " + PackageName + "<br>"
                              + "Status: <b style=\"color: red\"> Failed </b> - Check Error Log Table <br>"
                               + "Status Description: " + ErrorMessage + " < br > ";

                UpdateStatus(executionID, 4, "Failed - Check Error Log Table");
                SendEmail(EmailAddresses, EmailMessage, PackageName);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}
        public void LogError(string executionID, string ErrorMessage)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;

            ErrorMessage = ErrorMessage.Replace("'", "''");
            string query = "EXECUTE [etl].[usp_ETL_ErrorLogging] '"+ErrorMessage+"','" + executionID+"'";
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();

            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }

        public void UpdateStatus(string executionID,int status, string StatusDes)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;
            
            string query = "EXECUTE [etl].[usp_ETL_ExecutionStatusUpdate] '" + executionID + "',"+status+",'"+ StatusDes + "'";
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();

            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }

        public void SendEmail(string EmailAddresses, string EmailMessage, string PackageName)
        {
            MailMessage mail = new MailMessage();
            SmtpClient SmtpServer = new SmtpClient("mail.fieldfisher.com");

            mail.From = new MailAddress("IntegrationSupport@fieldfisher.com");
            mail.To.Add(EmailAddresses);
            mail.Subject = PackageName;
            mail.Body = EmailMessage;
            mail.IsBodyHtml = true;
            SmtpServer.Send(mail);
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_33070721c6964b12807c1e4eab6557ec.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AC6BB904-DDD7-4491-976C-43A6357F6D1F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_33070721c6964b12807c1e4eab6557ec</RootNamespace>
    <AssemblyName>ST_33070721c6964b12807c1e4eab6557ec</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_33070721c6964b12807c1e4eab6557ec</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_33070721c6964b12807c1e4eab6557ec</msb:DisplayName>
		<msb:ProjectId>{CE412099-A05D-48D1-85C9-234D70293A36}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_33070721c6964b12807c1e4eab6557ec.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_33070721c6964b12807c1e4eab6557ec")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_33070721c6964b12807c1e4eab6557ec")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33070721c6964b12807c1e4eab6557ec.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33070721c6964b12807c1e4eab6557ec.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33070721c6964b12807c1e4eab6557ec.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_33070721c6964b12807c1e4eab6557ec.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_33070721c6964b12807c1e4eab6557ec.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_33070721c6964b12807c1e4eab6557ec.dll">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
sgDpAwYAUwRDBAYAygFlBQYALQWiBQYAHQWEBBIAmgHTAxIA+wHTAxIAggFvBAYArwGCBQoAwQOY
AxYAOAYRARYA2AARAQYAcgNDBBYAXgYRARYAPQURAQ4AigDdBg4AgAADBQYAAQBDBBIA8wbpAxIA
cgbpAxIAuwTpAwYAMQFDBAYA4QBDBAYACwepBAAAAAAHAAAAAAABAAEAAQAQAGQEWAA5AAEAAQAA
ABAAqQUFBj0AAQAGAAABEABRBgUGYQADAAoAAwEAAIYGAABJAAQADQARAFgEzgARAFYB0gARAKIA
1gAGBjsA2gBWgGoG3QBWgDYB3QBQIAAAAACGAGoEBgABAPAhAAAAAIYATwXhAAEAkCIAAAAAhgCU
BucAAwAwIwAAAACGAPkD7gAGAIQjAAAAAIYYWAUGAAkAjCMAAAAAgxhYBQYACQCUIwAAAACTCCkF
9QAJAMAjAAAAAJMIPgH6AAkAxyMAAAAAkwhKAf8ACQDPIwAAAACWCMIGBQEKANYjAAAAAIYYWAUG
AAoA3iMAAAAAkRheBQoBCgAAAAEAEAAAAAIAywAAAAEAEAAAAAIAoQYAAAMAeAUAAAEAQgYAAAIA
vgAAAAMABQEAAAEAUgMJAFgFAQARAFgFBgAZAFgFCgApAFgFEAAxAFgFEAA5AFgFEABBAFgFEABJ
AFgFEABRAFgFEABZAFgFEABhAFgFEABpAFgFBgCZAFgFBgC5AFgFFQDJAFgFBgBxAH4GJQDRADQG
KgDZADoELwDhAEgDNQDpAKgGOQDpACQHPwDpAKgGRQDRAM4GAQDRAFoGUgDxADoEVwDRAJkENQD5
ANEEXQDpAJoAYgABAVgFaAAJARQHbwD5AOMEcwDpAKgGeACJAFgFBgAZAVgFEAAhAVgFEACJAEoE
gwCJABYFigApAXwAEACJALYGEACJAP4GEACJACsEkAAZAZUAlQBxAFgFBgB5AFgFBgAxAfMAmwAx
AQcHpAChAFgFqgDBAFgFBgAIABQAxAAIABgAyQApAHMARQEuAAsAHQEuABMAJgEuABsARQEuACMA
TgEuACsAdwEuADMAdwEuADsAfQEuAEMATgEuAEsAhgEuAFMAdwEuAFsAoAFDAGMAyQBJAHMARQFh
AHsAyQBjAGsAyQAbAEwAfgADAAEABAADAAAALQUOAQAAXgETAQAAxgYYAQIABwADAAIACAAFAAEA
CQAFAAIACgAHAASAAAABAAAAhRnkXQAAAAAAAFgAAAAEAAAAAAAAAAAAAACyAE8AAAAAAA0AAAAA
AAAAAAAAALsAeQMAAAAABAAAAAAAAAAAAAAAsgBDAAAAAAAEAAAAAAAAAAAAAACyAEMEAAAAAA0A
AAAAAAAAAAAAALsAHAAAAAAAAAAAAAEAAACzBQAABQACAAAAAAAASW50MzIAPE1vZHVsZT4AZXhl
Y3V0aW9uSUQATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRh
dGEAbXNjb3JsaWIAU1RfMzMwNzA3MjFjNjk2NGIxMjgwN2MxZTRlYWI2NTU3ZWMAQWRkAERiQ29t
bWFuZABTcWxDb21tYW5kAFNlbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UA
RW1haWxNZXNzYWdlAEVycm9yTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBQYWNrYWdlTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNU
QVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5kRW1haWwAU1RfMzMwNzA3MjFjNjk2NGIx
MjgwN2MxZTRlYWI2NTU3ZWMuZGxsAHNldF9Jc0JvZHlIdG1sAGdldF9JdGVtAFN5c3RlbQBzZXRf
RnJvbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE1haWxB
ZGRyZXNzQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNlQ29ubmVjdGlvbgBTcWxD
b25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBnZXRfVG8AQ3VsdHVyZUluZm8AZ2V0X1Jlc291
cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBMb2dFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN0YXR1c0RlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfMzMwNzA3MjFjNjk2NGIxMjgwN2MxZTRlYWI2NTU3ZWMuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzMzMDcwNzIxYzY5NjRi
MTI4MDdjMWU0ZWFiNjU1N2VjLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBFbWFpbEFkZHJlc3Nl
cwBTZXR0aW5ncwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNj
cmlwdFJlc3VsdHMAVXBkYXRlU3RhdHVzAHN0YXR1cwBDb25jYXQAT2JqZWN0AHNldF9TdWJqZWN0
AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABTbXRwQ2xp
ZW50AHNldF9Cb2R5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAb3BfRXF1YWxpdHkAAClV
AHMAZQByADoAOgBOAGUAdwBFAHgAZQBjAHUAdABpAG8AbgBJAEQAADFTAHkAcwB0AGUAbQA6ADoA
RQByAHIAbwByAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAKVUA
cwBlAHIAOgA6AFIAZQBzAHAAbwBuAGMAZQBTAHQAYQB0AHUAcwAAQVUAcwBlAHIAOgA6AE4AbwB0
AGkAZgBpAGMAYQB0AGkAbwBuAEUAbQBhAGkAbABBAGQAZAByAGUAcwBzAGUAcwAAG1AAYQBjAGsA
YQBnAGUATgBhAG0AZQA6ACAAABkgAFMAbwB1AHIAYwBlAE4AYQBtAGUAOgAAHSAARQByAHIAbwBy
AE0AZQBzAHMAYQBnAGUAOgAAAyAAAAMwAAAXUgB1AGwAZQAgAE4AYQBtAGUAOgAgAACBBzwAYgBy
AD4AUwB0AGEAdAB1AHMAOgAgAFQAZQByAG0AaQBuAGEAdABlAGQAIAA8AGIAcgA+AFMAdABhAHQA
dQBzACAARABlAHMAYwByAGkAcAB0AGkAbwBuADoAIABDAG8AbgBuAGUAYwB0AGkAbwBuACAAVABp
AG0AZQBkAE8AdQB0ACAAPABiAHIAPgA8AGgANAA+AEUAeABlAGMAdQB0AGUAIABTAFEATAAgAEEA
ZwBlAG4AdAAgAGoAbwBiACAAYQBnAGEAaQBuACAAdABvACAAYwBvAG4AdABpAG4AdQBlACAARQBU
AEwAIABQAHIAbwBjAGUAcwBzADwALwBoADQAPgAAW0MAbwBuAG4AZQBjAHQAaQBvAG4AIABUAGkA
bQBlAGQATwB1AHQAIAAtACAAUgBlAEUAeABlAGMAdQB0AGUAIABQAGEAYwBrAGEAZwBlACAAYQBn
AGEAaQBuAAGAvzwAYgByAD4AUwB0AGEAdAB1AHMAOgAgADwAYgAgAHMAdAB5AGwAZQA9ACIAYwBv
AGwAbwByADoAIAByAGUAZAAiAD4AIABGAGEAaQBsAGUAZAAgADwALwBiAD4AIAAtACAAQwBoAGUA
YwBrACAARQByAHIAbwByACAATABvAGcAIABUAGEAYgBsAGUAIAA8AGIAcgA+AFMAdABhAHQAdQBz
ACAARABlAHMAYwByAGkAcAB0AGkAbwBuADoAIAABESAAPAAgAGIAcgAgAD4AIAAAPUYAYQBpAGwA
ZQBkACAALQAgAEMAaABlAGMAawAgAEUAcgByAG8AcgAgAEwAbwBnACAAVABhAGIAbABlAAEPQQBE
AE8AQwBvAG4AbgAAAycAAQUnACcAAU1FAFgARQBDAFUAVABFACAAWwBlAHQAbABdAC4AWwB1AHMA
cABfAEUAVABMAF8ARQByAHIAbwByAEwAbwBnAGcAaQBuAGcAXQAgACcAAQcnACwAJwABX0UAWABF
AEMAVQBUAEUAIABbAGUAdABsAF0ALgBbAHUAcwBwAF8ARQBUAEwAXwBFAHgAZQBjAHUAdABpAG8A
bgBTAHQAYQB0AHUAcwBVAHAAZABhAHQAZQBdACAAJwABBScALAABBSwAJwABKW0AYQBpAGwALgBm
AGkAZQBsAGQAZgBpAHMAaABlAHIALgBjAG8AbQAARUkAbgB0AGUAZwByAGEAdABpAG8AbgBTAHUA
cABwAG8AcgB0AEAAZgBpAGUAbABkAGYAaQBzAGgAZQByAC4AYwBvAG0AAHFTAFQAXwAzADMAMAA3
ADAANwAyADEAYwA2ADkANgA0AGIAMQAyADgAMAA3AGMAMQBlADQAZQBhAGIANgA1ADUANwBlAGMA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAADmwsNB/4r5RLcdOfLJ
b8+6AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCQcHDg4ODg4ODgQgABJpBCAAEm0FIAEScRwD
IAAcBQABDh0OBQACAg4OBgADDg4ODgUHAhwSQQQgABJ5BSABEn0cBCABHBwFIAIODg4GIAIBDhJB
AyAACAQgAQEcBQABDh0cBAcBEkUGIAEBEoCRBSAAEoCVBCABAQIFIAEBEkUIAAESgJkRgJ0FIAAS
gKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEU
BSACAQ4OBiADAQ4IDgYgAwEODg4EAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQI
ABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
VF8zMzA3MDcyMWM2OTY0YjEyODA3YzFlNGVhYjY1NTdlYwAABQEAAAAACAEAA0ZGVwAAGQEAFENv
cHlyaWdodCBAIEZGVyAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABQ5AAAA
AAAAAAAAAC45AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgOQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA5F2FGQAAAQDkXYUZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAARgBGAFcAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMwAzADAANwAwADcAMgAxAGMANgA5ADYANABiADEAMgA4ADAANwBjADEAZQA0AGUA
YQBiADYANQA1ADcAZQBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYANQAzADMALgAyADQAMAAzADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMwAzADAANwAwADcAMgAxAGMANgA5ADYANABiADEAMgA4ADAANwBjADEAZQA0AGUAYQBi
ADYANQA1ADcAZQBjAC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABGAEYAVwAgADIAMAAxADcAAAAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADMAMwAwADcAMAA3ADIAMQBjADYAOQA2ADQAYgAxADIAOAAw
ADcAYwAxAGUANABlAGEAYgA2ADUANQA3AGUAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAzADMAMAA3ADAANwAyADEAYwA2ADkANgA0AGIAMQAyADgAMAA3
AGMAMQBlADQAZQBhAGIANgA1ADUANwBlAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYANQAzADMALgAyADQAMAAzADYAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAzADMALgAyADQAMAAzADYAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAQDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="194,42"
          Id="Package\For Loop Container\Access Token Validation"
          TopLeft="221,5.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\For Loop Container\Generate Access and Refresh Token"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\For Loop Container\Get JSON Data"
          TopLeft="242.5,311.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\For Loop Container\GetNewAccessToken"
          TopLeft="61,209.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\For Loop Container\Load Data into MDB"
          TopLeft="230.5,413.5" />
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="287,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-156,60"
              Start="0,0"
              End="-156,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2944785276074" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2944785276074"
                    Point2="0,24.2944785276074"
                    Point3="-4,24.2944785276074" />
                  <mssgle:LineSegment
                    End="-152,24.2944785276074" />
                  <mssgle:CubicBezierSegment
                    Point1="-152,24.2944785276074"
                    Point2="-156,24.2944785276074"
                    Point3="-156,28.2944785276074" />
                  <mssgle:LineSegment
                    End="-156,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-86,29.2944785276074,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="131,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,60"
              Start="0,0"
              End="28,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="24,30" />
                  <mssgle:CubicBezierSegment
                    Point1="24,30"
                    Point2="28,30"
                    Point3="28,34" />
                  <mssgle:LineSegment
                    End="28,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="318,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="345.416666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,264"
              Start="0,0"
              End="0,256.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,256.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,120.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="159,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.166666666667,60"
              Start="0,0"
              End="135.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.6225425950197" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.6225425950197"
                    Point2="0,35.6225425950197"
                    Point3="4,35.6225425950197" />
                  <mssgle:LineSegment
                    End="131.166666666667,35.6225425950197" />
                  <mssgle:CubicBezierSegment
                    Point1="131.166666666667,35.6225425950197"
                    Point2="135.166666666667,35.6225425950197"
                    Point3="135.166666666667,39.6225425950197" />
                  <mssgle:LineSegment
                    End="135.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="420,511"
          Size="420,554"
          Id="Package\For Loop Container"
          TopLeft="169,383" />
        <NodeLayout
          Size="251,42"
          Id="Package\Generate Access and Refresh Token"
          TopLeft="257,173" />
        <NodeLayout
          Size="213,42"
          Id="Package\Get Max ProjTransDateTime"
          TopLeft="279,311" />
        <NodeLayout
          Size="178,42"
          Id="Package\GetNewAccessToken"
          TopLeft="291,244" />
        <NodeLayout
          Size="104,42"
          Id="Package\Start"
          TopLeft="337,95" />
        <NodeLayout
          Size="218,42"
          Id="Package\Update Status - Success END"
          TopLeft="647,640" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="382.25,353">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="381.25,215">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="385.75,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="382.75,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="589,660.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58,0"
              Start="0,0"
              End="50.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="277,42"
          Id="Package.EventHandlers[OnError]\Error Logging and Update Status - Failure"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>