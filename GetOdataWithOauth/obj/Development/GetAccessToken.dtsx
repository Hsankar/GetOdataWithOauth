<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/3/2017 5:15:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FFWLON-D13BZS"
  DTS:CreatorName="FFWUK\HK2"
  DTS:DTSID="{BF1E36F6-7079-4C02-A12C-BE1664FE065E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="2057"
  DTS:ObjectName="GetAccessToken"
  DTS:PackageType="5"
  DTS:VersionBuild="68"
  DTS:VersionGUID="{27873AE6-C766-4383-8E48-1938C11CAF5A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{11778FDC-FDB8-4A78-8DFF-AC98267CC2F0}"
      DTS:ObjectName="pExecutionID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9CF843DA-DEDE-4C4D-A99E-2051CD54A679}"
      DTS:ObjectName="pResponceStatus">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">NaN</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AF49B44-ECA2-4BDF-B121-BCB3F7DD052F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ppAccessCode]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AccessCode">
      <DTS:VariableValue
        DTS:DataType="8">AQABAAIAAABHh4kmS_aKT5XrjzxRAtHzQLuczGqNN6M-Mwd3UiP-StdFV_ZOy507PRJvvDdC8UpFWGH5lLNmzm0B1sK_VDg1VEysjCCYUCAzctSKFtSJT0LavtM1ffDy7eK0rHZ4qIyY_Yq-aUkI0pZyTi7bsiaXHcjpChhniDBU89ttHCUHa0hLF8EeAiwQ5D_w0WDITy-Dr9K3IXZ9GqrlePfKvpSBVQ8bzHRilYwXti6Fq9XTbmGYsbPHfnPGmSSD43umACn8Sw93-jGNWo2fGS5td84JGLr2IcTCUBowpMEXjg5Z0oDs3n6COMLYV5z9WJx4aWMpAggykPQ4J6LDPJYkqeHaZrwNLQsupIIqMcuQqf_OwR9Zo9k6sT7GriTgdDnAe54Dqhl1uwUtCBw0sFlZJsy968an8e3Zy7PrJdxxiofb9xzxcm8ghkl2kHXGjX_SvH-7ZaU1YiTeApQ1CkIZ_wn764b0SMzgUyim7e57Yuw13u25cU3xGkjc3hxVtdO_DchaObKH2ppu5Qk9Dsi_cG6MusPvrBmGkILviMOzruL6w3iqW5BCyF34PYByAnbzDjQFZeQewhbnZtbSc9fFs-labmxmiHQ05byhlaJa-nRnblk6eZxISPsym6mq9mlTCgmwr0lnuEiN_mtP78GmoUul7oKv_q6BBIZ_WrZBOdkxBBJBfSeQ3mmkv25HCZ2UEUIgAA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0D749C1-D34C-429B-AA76-7E9AE25E51A5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::pExecutionID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C691A873-2117-473D-B7A0-03D6E143CB05}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetAccessToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49D3AAE0-C653-47D7-82E9-E757EB640C23}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetRefreshToken">
      <DTS:VariableValue
        DTS:DataType="8">NA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B1CAE1A-8527-427D-88AC-F8573AC89769}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InitialAccessTokenDateTime">
      <DTS:VariableValue
        DTS:DataType="7">11/6/2017 2:01:57 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{69D4C83E-273B-4BF6-BB5A-A9827FB61976}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TokenExpirationDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/1900</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Generate Access and Refresh Tokens"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{634a90df-4180-4bbb-8bec-dfea14766cd6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Access and Refresh Tokens"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_af33ccb8cf3c45d9955b9184dbfddec0"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::pExecutionID,$Package::pResponceStatus,$Project::ppDLLPath,$Project::ppRestsharpDLLName,$Project::ppNewtonJsonDLLName"
          ReadWriteVariables="User::AccessCode,User::GetAccessToken,User::GetRefreshToken,User::InitialAccessTokenDateTime,User::TokenExpirationDate">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Settings.get_Default():ST_43bdd0aea65142c5a9418f463813ea37.Properties.Sett" +
    "ings")]

namespace ST_43bdd0aea65142c5a9418f463813ea37.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using RestSharp;
using Newtonsoft.Json.Linq;
using System.Net;
using Newtonsoft.Json;
using System.Data.SqlClient;
using System.Reflection;
#endregion

namespace ST_43bdd0aea65142c5a9418f463813ea37
{  	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion
        public ScriptMain()
        {

            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve1);
        }
        public Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            string name = (string)Dts.Variables["$Project::ppRestsharpDLLName"].Value;
            if (args.Name.Contains(name))
            {
                string path = (string)Dts.Variables["$Project::ppDLLPath"].Value;
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, name + ".dll"));

            }

            return null;
        }
        public Assembly CurrentDomain_AssemblyResolve1(object sender, ResolveEventArgs args)
        {
            string name = (string)Dts.Variables["$Project::ppNewtonJsonDLLName"].Value;
            if (args.Name.Contains(name))
            {
                string path = (string)Dts.Variables["$Project::ppDLLPath"].Value;
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, name + ".dll"));

            }

            return null;
        }
        public void Main()
		{
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;

            // TODO: Add your code here

            var RefreshToken = (string)Dts.Variables["User::GetRefreshToken"].Value;
            var AccessToken = (string)Dts.Variables["User::GetAccessToken"].Value;
            DateTime TokenExpirationDateTime = (DateTime)Dts.Variables["User::TokenExpirationDate"].Value;
            DateTime InitialAccessTokenDateTime = (DateTime)Dts.Variables["User::InitialAccessTokenDateTime"].Value;
            var ExecutionID = (string)Dts.Variables["$Package::pExecutionID"].Value;
            var ResponceStatus = (string)Dts.Variables["$Package::pResponceStatus"].Value;

            try
            {
                var client = new RestClient("https://login.microsoftonline.com/352bdc64-a0bf-4458-a3e2-4a12e54d50d1/oauth2/token");
                var request = new RestRequest(Method.POST);
                IRestResponse response;

                //if token expiration date and tome is less than or equal to 5 mins create new access token using refresh token
                if ((TokenExpirationDateTime - DateTime.Now).TotalMinutes <= 5 || ResponceStatus == "TimedOut")
                {
                    request.AddHeader("cache-control", "no-cache");
                    request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
                    request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"grant_type\"\r\n\r\nrefresh_token\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"access_token\"\r\n\r\n" + AccessToken + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"refresh_token\"\r\n\r\n" + RefreshToken + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_id\"\r\n\r\n50eb507c-a9d0-4525-bef1-6fa37224599c\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_secret\"\r\n\r\nkS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);

                    response = client.Execute(request);
                    var data = (JObject)JsonConvert.DeserializeObject(response.Content);
                    AccessToken = data["access_token"].Value<string>();
                    RefreshToken = data["refresh_token"].Value<string>();
                    var expires_on = data["expires_in"].Value<double>();

                    Dts.Variables["User::GetAccessToken"].Value = AccessToken;
                    Dts.Variables["User::GetRefreshToken"].Value = RefreshToken;
                    Dts.Variables["User::TokenExpirationDate"].Value = DateTime.Now.AddSeconds(expires_on);
                }
                else if ((DateTime.Now - InitialAccessTokenDateTime).TotalDays > 89)
                {
                    string Code = (string)Dts.Variables["User::AccessCode"].Value;

                    request.AddHeader("cache-control", "no-cache");
                    request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
                    request.AddHeader("authorization", "client_id:50eb507c-a9d0-4525-bef1-6fa37224599c, client_secret:kS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=");
                    request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"grant_type\"\r\n\r\nauthorization_code\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"code\"\r\n\r\n" + Code + "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_id\"\r\n\r\n50eb507c-a9d0-4525-bef1-6fa37224599c\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"redirect_uri\"\r\n\r\nhttps://www.getpostman.com/oauth2/callback\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"client_secret\"\r\n\r\nkS4lZ6WTPT/9JEi31y7LE4hZoH0wWmd8HEYBD2TDDio=\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"resource\"\r\n\r\nhttps://fieldfisher-test01.sandbox.operations.dynamics.com\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);

                    response = client.Execute(request);
                    var data = (JObject)JsonConvert.DeserializeObject(response.Content);
                    AccessToken = data["access_token"].Value<string>();
                    RefreshToken = data["refresh_token"].Value<string>();
                    var expires_on = data["expires_in"].Value<double>();

                    Dts.Variables["User::GetAccessToken"].Value = AccessToken;
                    Dts.Variables["User::GetRefreshToken"].Value = RefreshToken;
                    Dts.Variables["User::TokenExpirationDate"].Value = DateTime.Now.AddSeconds(expires_on);
                    Dts.Variables["User::InitialAccessTokenDateTime"].Value = DateTime.Now;
                }
                //else
                //{
                //    RefreshToken = RefreshToken;
                //    AccessToken = AccessToken;
                //    TokenExpirationDateTime = TokenExpirationDateTime;
                //    InitialAccessTokenDateTime = InitialAccessTokenDateTime;
                //}
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                LogError(ExecutionID, ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            
		}
        public void LogError ( string executionID, string ErrorMessage)
        {
            object rawConnection = Dts.Connections["ADOConn"].AcquireConnection(Dts.Transaction);
            SqlConnection myADONETConnection = (SqlConnection)rawConnection;
            //Use the connection in some code here, then release the connection
            myADONETConnection.Open();
            string query = "EXECUTE [etl].[usp_ETL_ErrorLogging] "+ ErrorMessage + ","+ executionID;
            SqlCommand cmd = new SqlCommand(query, myADONETConnection);
            cmd.ExecuteNonQuery();
            myADONETConnection.Close();
            Dts.Connections["ADOConn"].ReleaseConnection(rawConnection);
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_af33ccb8cf3c45d9955b9184dbfddec0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{707047FA-8ECC-412C-B95E-5E4C552DA80E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_43bdd0aea65142c5a9418f463813ea37</RootNamespace>
    <AssemblyName>ST_af33ccb8cf3c45d9955b9184dbfddec0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL" />
    <Reference Include="RestSharp, Version=106.0.0.0, Culture=neutral, PublicKeyToken=598062e77f915f75, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\SSISdllFiles\RestSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_af33ccb8cf3c45d9955b9184dbfddec0</msb:CodeName>
		<msb:DisplayName>ST_af33ccb8cf3c45d9955b9184dbfddec0</msb:DisplayName>
		<msb:ProjectId>{CD4996FF-749A-4E24-9DD7-5AC1EE9C7773}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_af33ccb8cf3c45d9955b9184dbfddec0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_43bdd0aea65142c5a9418f463813ea37")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_43bdd0aea65142c5a9418f463813ea37")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_43bdd0aea65142c5a9418f463813ea37.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_43bdd0aea65142c5a9418f463813ea37.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_af33ccb8cf3c45d9955b9184dbfddec0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFNiFFoAAAAAAAAAAOAAIiALATAAACoAAAAIAAAAAAAA2kkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIhJAABPAAAAAGAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4CkAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
SQAAAAAAAEgAAAACAAUALCYAAKQiAAABAAAAAAAAANBIAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAM4CKBAAAAooEQAACgL+BgIAAAZzEgAACm8TAAAKKBEAAAoC
/gYDAAAGcxIAAApvEwAACioTMAMAZQAAAAEAABECKBQAAApvFQAACnIBAABwbxYAAApvFwAACnQl
AAABCgRvGAAACgZvGQAACiw1AigUAAAKbxUAAApyOwAAcG8WAAAKbxcAAAp0JQAAAQZyYwAAcCga
AAAKKBsAAAooHAAACioUKgAAABMwAwBlAAAAAQAAEQIoFAAACm8VAAAKcm0AAHBvFgAACm8XAAAK
dCUAAAEKBG8YAAAKBm8ZAAAKLDUCKBQAAApvFQAACnI7AABwbxYAAApvFwAACnQlAAABBnJjAABw
KBoAAAooGwAACigcAAAKKhQqAAAAGzAGALwDAAACAAARIMAPAAAoHQAACgIoFAAACm8VAAAKcqkA
AHBvFgAACm8XAAAKdCUAAAEKAigUAAAKbxUAAApy1QAAcG8WAAAKbxcAAAp0JQAAAQsCKBQAAApv
FQAACnL/AABwbxYAAApvFwAACqUSAAABDAIoFAAACm8VAAAKcjMBAHBvFgAACm8XAAAKpRIAAAEN
AigUAAAKbxUAAApydQEAcG8WAAAKbxcAAAp0JQAAARMEAigUAAAKbxUAAApyowEAcG8WAAAKbxcA
AAp0JQAAARMFctcBAHBzHgAAChMGF3MfAAAKEwcIKCAAAAooIQAAChMIEggoIgAACiMAAAAAAAAU
QDEREQVygAIAcCgjAAAKORIBAAARB3KSAgBwcq4CAHBvJAAACiYRB3LAAgBwctoCAHBvJAAACiYR
B3LaAgBwG40lAAABJRZyYwMAcKIlFweiJRhyAAUAcKIlGQaiJRpyyQUAcKIoJQAAChpvJgAACiYR
BhEHbycAAApvKAAACigpAAAKdC4AAAElckYIAHBvKgAACigBAAArCyVyYAgAcG8qAAAKKAEAACsK
cnwIAHBvKgAACigCAAArEwkCKBQAAApvFQAACnLVAABwbxYAAAoHbywAAAoCKBQAAApvFQAACnKp
AABwbxYAAAoGbywAAAoCKBQAAApvFQAACnL/AABwbxYAAAooIAAAChMKEgoRCSgtAAAKjBIAAAFv
LAAACjhsAQAAKCAAAAoJKCEAAAoTCBIIKC4AAAojAAAAAABAVkBDSgEAAAIoFAAACm8VAAAKcpII
AHBvFgAACm8XAAAKdCUAAAETCxEHcpICAHByrgIAcG8kAAAKJhEHcsACAHBy2gIAcG8kAAAKJhEH
crQIAHBy0AgAcG8kAAAKJhEHctoCAHBypwkAcBELcj4LAHAoLwAAChpvJgAACiYRBhEHbycAAApv
KAAACigpAAAKdC4AAAElckYIAHBvKgAACigBAAArCyVyYAgAcG8qAAAKKAEAACsKcnwIAHBvKgAA
CigCAAArEwwCKBQAAApvFQAACnLVAABwbxYAAAoHbywAAAoCKBQAAApvFQAACnKpAABwbxYAAAoG
bywAAAoCKBQAAApvFQAACnL/AABwbxYAAAooIAAAChMKEgoRDCgtAAAKjBIAAAFvLAAACgIoFAAA
Cm8VAAAKcjMBAHBvFgAACiggAAAKjBIAAAFvLAAACgIoFAAAChZvMAAACt4fEw0CEQQRDW8xAAAK
KAUAAAYCKBQAAAoXbzAAAAreACpBHAAAAAAAAMwAAADQAgAAnAMAAB8AAAAWAAABEzAEAHIAAAAD
AAARAigUAAAKbzIAAApyAxAAcG8zAAAKAigUAAAKbzQAAApvNQAACgoGdBcAAAELB282AAAKchMQ
AHAEcl8QAHADKDcAAAoHczgAAApvOQAACiYHbzoAAAoCKBQAAApvMgAACnIDEABwbzMAAAoGbzsA
AAoqHgIoPAAACiqufgEAAAQtHnJjEABw0AMAAAIoPQAACm8+AAAKcz8AAAqAAQAABH4BAAAEKhp+
AgAABCoeAoACAAAEKhp+AwAABCoeAihAAAAKKi5zCwAABoADAAAEKkJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAANgFAAAjfgAARAYAAAAJAAAjU3RyaW5ncwAAAABEDwAA2BAAACNV
UwAcIAAAEAAAACNHVUlEAAAALCAAAHgCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkLAAAA+gEzABYA
AAEAAAA4AAAABQAAAAYAAAAMAAAABwAAAEAAAAACAAAAEAAAAAMAAAACAAAAAwAAAAQAAAABAAAA
BwAAAAEAAAABAAAAAgAAAAAA1AQBAAAAAAAGAD0DAAcGAMwDAAcGAIkC4gYPAHQHAAAGALYCtwUG
ACADtwUGAAEDtwUGALMDtwUGAF0DtwUGAHYDtwUGAM0CtwUGAOgCPgQKAJEDgwQKAPQBgwQGANkI
twUGAFoIGgUGANoHGgUGAHABGgUOAJ0IQQYOAMEIQQYGADIFGgUGAAgGGgUSAPoFhwgGACEFGgUG
AGwC4gYGAHUGIAcGADUGgwUWADwCvgQWAJ0CvgQWABACbgUGAFECAAcGAFIFGgUGAKsGGgUKAKwE
gwQaALYHeQEaADEBeQEGAFgEGgUGAF8EiwAWAJcGYQgWAKEBYQgOAAEBQQYOAMAIQQYOALYBQQYO
ACgCQQYeALQIJQYeAEcISwYeADsFSwYeAPkHSwYGACUA0QAaAAgIeQEaAIUGeQESAMkFEgYSAPYA
hwgSAOwAEgYGAL8BGgUGADoBGgUAAAAAdgAAAAAAAQABAAEAEABHBVIAOQABAAEAAAAQACcHgwdB
AAEABgAAARAA0QeDB3kAAwAKAAMBAAAkCAAAYQAEAA0AEQAmBWABEQDkAWQBEQAIAWgBBga0AGwB
VoAUCG8BVoDEAW8BUCAAAAAAhhjVBgYAAQCEIAAAAACGACAEcwEBAPggAAAAAIYAMwBzAQMAbCEA
AAAAhgBNBQYABQBQJQAAAACGAMwGewEFAM4lAAAAAIMY1QYGAAcA1iUAAAAAkwhxBoEBBwACJgAA
AACTCMwBhgEHAAkmAAAAAJMI2AGLAQcAESYAAAAAlghsCJEBCAAYJgAAAACGGNUGBgAIACAmAAAA
AJEY2waWAQgAAAABAGoGAAACAOsHAAABAGoGAAACAOsHAAABAH8AAAACACQBAAABAAYECQDVBgEA
EQDVBgYAGQDVBgoAKQDVBhAAMQDVBhAAOQDVBhAAQQDVBhAASQDVBhAAUQDVBhAAWQDVBhAAYQDV
BhAAaQDVBgYAyQDVBgYA6QDVBhUA+QDVBgYAcQDVBgYAAQFcBRsACQHVBiEAAQEMBCcAcQAcCDIA
EQGyBzgAGQERBT4AIQHyA0UAiQBnAUkAKQHwB00AKQFACFIAMQGZAVIAeQBeAVgAOQH8BHYAmQDV
BhAAoQDVBn0AkQDNCIQAkQCYBYkAqQDAB5IAKQHyCJYAoQBgBpwAKQFACKQAoQC/BqoAmQDqA7UA
YQGoCEkAaQFPCL4AcQERBcMAgQEABMoAIQH8A+AAkQD1BuUAqQAyCJIAKQFACOsAEQF4CAEAsQAY
AUkAEQEECPgAkQERBf4AEQGnBUUAmQHWBQUBoQFCBQYAKQFACAoBqQHVBhIBsQHiCBkBoQE2AgYA
mQHoBeAAgQDVBgYAuQFMAR0BuQHVCCYB0QDVBisB8QDVBgYACAAUAFYBCAAYAFsBKQBzANEBLgAL
AKkBLgATALIBLgAbANEBLgAjANoBLgArAAMCLgAzAAMCLgA7AAkCLgBDANoBLgBLABICLgBTAAMC
LgBbACwCQwBjAFsBSQBzANEBYQB7AFsBYwBrAFsBLgBeAPIAAwABAAQAAwAAAHUGmgEAAOwBnwEA
AHAIpAECAAcAAwACAAgABQABAAkABQACAAoABwAEgAAAAQAAAIYZ6XoAAAAAAAABAAAABAAAAAAA
AAAAAAAAMgHIAAAAAAANAAAAAAAAAAAAAAA7AWQEAAAAAGoAAAAAAAAAAAAAAEQBQQYAAAAABAAA
AAAAAAAAAAAAMgG8AAAAAAAEAAAAAAAAAAAAAAAyARoFAAAAAA0AAAAAAAAAAAAAADsBlQAAAAAA
CAAAAAAAAAAAAAAATQElBgAAAAAAAAAAAQAAADEHAAAFAAIAVwDYAFcA3AAAAAAAAFNUX2FmMzNj
Y2I4Y2YzYzQ1ZDk5NTViOTE4NGRiZmRkZWMwAElFbnVtZXJhYmxlYDEAQ3VycmVudERvbWFpbl9B
c3NlbWJseVJlc29sdmUxAFNUXzQzYmRkMGFlYTY1MTQyYzVhOTQxOGY0NjM4MTNlYTM3ADxNb2R1
bGU+AGV4ZWN1dGlvbklEAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBE
YkNvbW1hbmQAU3FsQ29tbWFuZABNZXRob2QAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAEVy
cm9yTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBM
b2FkRmlsZQBnZXRfTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AENvbWJpbmUAU2VjdXJpdHlQcm90b2NvbFR5cGUAUGFyYW1ldGVyVHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UASVJlc3RSZXNwb25zZQBDbG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARXhlY3V0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVl
AGFkZF9Bc3NlbWJseVJlc29sdmUAQ3VycmVudERvbWFpbl9Bc3NlbWJseVJlc29sdmUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYWYzM2NjYjhjZjNjNDVkOTk1NWI5MTg0
ZGJmZGRlYzAuZGxsAHNldF9TZWN1cml0eVByb3RvY29sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJl
c291cmNlTWFuAFRpbWVTcGFuAEpUb2tlbgBPcGVuAFNjcmlwdE1haW4AQXBwRG9tYWluAGdldF9D
dXJyZW50RG9tYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9w
X1N1YnRyYWN0aW9uAGdldF9UcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYkNvbm5lY3Rp
b24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNl
cHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBSZXN0
U2hhcnAATmV3dG9uc29mdC5Kc29uLkxpbnEAQWRkSGVhZGVyAHNlbmRlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIAUmVzb2x2ZUV2ZW50
SGFuZGxlcgBBZGRQYXJhbWV0ZXIATG9nRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBBZGRTZWNvbmRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTVF80M2JkZDBhZWE2NTE0MmM1YTk0MThmNDYzODEzZWEzNy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNDNiZGQwYWVhNjUxNDJjNWE5NDE4
ZjQ2MzgxM2VhMzcuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGdldF9Ub3RhbE1pbnV0ZXMAU2V0
dGluZ3MAUmVzb2x2ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAEV4dGVuc2lvbnMAZ2V0X0Nvbm5l
Y3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Ub3RhbERheXMAQ29uY2F0
AEpPYmplY3QARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAUmVzdENsaWVudABnZXRfQ29udGVudABKc29u
Q29udmVydABJUmVzdFJlcXVlc3QAZ2V0X05vdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5
AG9wX0VxdWFsaXR5AAAAADkkAFAAcgBvAGoAZQBjAHQAOgA6AHAAcABSAGUAcwB0AHMAaABhAHIA
cABEAEwATABOAGEAbQBlAAAnJABQAHIAbwBqAGUAYwB0ADoAOgBwAHAARABMAEwAUABhAHQAaAAA
CS4AZABsAGwAADskAFAAcgBvAGoAZQBjAHQAOgA6AHAAcABOAGUAdwB0AG8AbgBKAHMAbwBuAEQA
TABMAE4AYQBtAGUAACtVAHMAZQByADoAOgBHAGUAdABSAGUAZgByAGUAcwBoAFQAbwBrAGUAbgAA
KVUAcwBlAHIAOgA6AEcAZQB0AEEAYwBjAGUAcwBzAFQAbwBrAGUAbgAAM1UAcwBlAHIAOgA6AFQA
bwBrAGUAbgBFAHgAcABpAHIAYQB0AGkAbwBuAEQAYQB0AGUAAEFVAHMAZQByADoAOgBJAG4AaQB0
AGkAYQBsAEEAYwBjAGUAcwBzAFQAbwBrAGUAbgBEAGEAdABlAFQAaQBtAGUAAC0kAFAAYQBjAGsA
YQBnAGUAOgA6AHAARQB4AGUAYwB1AHQAaQBvAG4ASQBEAAAzJABQAGEAYwBrAGEAZwBlADoAOgBw
AFIAZQBzAHAAbwBuAGMAZQBTAHQAYQB0AHUAcwAAgKdoAHQAdABwAHMAOgAvAC8AbABvAGcAaQBu
AC4AbQBpAGMAcgBvAHMAbwBmAHQAbwBuAGwAaQBuAGUALgBjAG8AbQAvADMANQAyAGIAZABjADYA
NAAtAGEAMABiAGYALQA0ADQANQA4AC0AYQAzAGUAMgAtADQAYQAxADIAZQA1ADQAZAA1ADAAZAAx
AC8AbwBhAHUAdABoADIALwB0AG8AawBlAG4AARFUAGkAbQBlAGQATwB1AHQAABtjAGEAYwBoAGUA
LQBjAG8AbgB0AHIAbwBsAAERbgBvAC0AYwBhAGMAaABlAAEZYwBvAG4AdABlAG4AdAAtAHQAeQBw
AGUAAYCHbQB1AGwAdABpAHAAYQByAHQALwBmAG8AcgBtAC0AZABhAHQAYQA7ACAAYgBvAHUAbgBk
AGEAcgB5AD0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0A
QQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwABgZstAC0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8A
cgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwANAAoAQwBv
AG4AdABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAtAGQAYQB0AGEA
OwAgAG4AYQBtAGUAPQAiAGcAcgBhAG4AdABfAHQAeQBwAGUAIgANAAoADQAKAHIAZQBmAHIAZQBz
AGgAXwB0AG8AawBlAG4ADQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUA
bgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUAbgB0
AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0A
ZQA9ACIAYQBjAGMAZQBzAHMAXwB0AG8AawBlAG4AIgANAAoADQAKAAGAxw0ACgAtAC0ALQAtAC0A
LQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVABy
AFoAdQAwAGcAVwANAAoAQwBvAG4AdABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAA
ZgBvAHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBtAGUAPQAiAHIAZQBmAHIAZQBzAGgAXwB0AG8AawBl
AG4AIgANAAoADQAKAAGCew0ACgAtAC0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBtAEIAbwB1
AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwANAAoAQwBvAG4AdABlAG4A
dAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAtAGQAYQB0AGEAOwAgAG4AYQBt
AGUAPQAiAGMAbABpAGUAbgB0AF8AaQBkACIADQAKAA0ACgA1ADAAZQBiADUAMAA3AGMALQBhADkA
ZAAwAC0ANAA1ADIANQAtAGIAZQBmADEALQA2AGYAYQAzADcAMgAyADQANQA5ADkAYwANAAoALQAt
AC0ALQAtAC0AVwBlAGIASwBpAHQARgBvAHIAbQBCAG8AdQBuAGQAYQByAHkANwBNAEEANABZAFcA
eABrAFQAcgBaAHUAMABnAFcADQAKAEMAbwBuAHQAZQBuAHQALQBEAGkAcwBwAG8AcwBpAHQAaQBv
AG4AOgAgAGYAbwByAG0ALQBkAGEAdABhADsAIABuAGEAbQBlAD0AIgBjAGwAaQBlAG4AdABfAHMA
ZQBjAHIAZQB0ACIADQAKAA0ACgBrAFMANABsAFoANgBXAFQAUABUAC8AOQBKAEUAaQAzADEAeQA3
AEwARQA0AGgAWgBvAEgAMAB3AFcAbQBkADgASABFAFkAQgBEADIAVABEAEQAaQBvAD0ADQAKAC0A
LQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBX
AHgAawBUAHIAWgB1ADAAZwBXAC0ALQABGWEAYwBjAGUAcwBzAF8AdABvAGsAZQBuAAAbcgBlAGYA
cgBlAHMAaABfAHQAbwBrAGUAbgAAFWUAeABwAGkAcgBlAHMAXwBpAG4AACFVAHMAZQByADoAOgBB
AGMAYwBlAHMAcwBDAG8AZABlAAAbYQB1AHQAaABvAHIAaQB6AGEAdABpAG8AbgAAgNVjAGwAaQBl
AG4AdABfAGkAZAA6ADUAMABlAGIANQAwADcAYwAtAGEAOQBkADAALQA0ADUAMgA1AC0AYgBlAGYA
MQAtADYAZgBhADMANwAyADIANAA1ADkAOQBjACwAIABjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0
ADoAawBTADQAbABaADYAVwBUAFAAVAAvADkASgBFAGkAMwAxAHkANwBMAEUANABoAFoAbwBIADAA
dwBXAG0AZAA4AEgARQBZAEIARAAyAFQARABEAGkAbwA9AAGBlS0ALQAtAC0ALQAtAFcAZQBiAEsA
aQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBX
AA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0A
ZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAZwByAGEAbgB0AF8AdAB5AHAAZQAiAA0ACgANAAoAYQB1
AHQAaABvAHIAaQB6AGEAdABpAG8AbgBfAGMAbwBkAGUADQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsA
aQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBX
AA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0A
ZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAYwBvAGQAZQAiAA0ACgANAAoAAYTDDQAKAC0ALQAtAC0A
LQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBvAHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBU
AHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUAbgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoA
IABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBhAG0AZQA9ACIAYwBsAGkAZQBuAHQAXwBpAGQAIgAN
AAoADQAKADUAMABlAGIANQAwADcAYwAtAGEAOQBkADAALQA0ADUAMgA1AC0AYgBlAGYAMQAtADYA
ZgBhADMANwAyADIANAA1ADkAOQBjAA0ACgAtAC0ALQAtAC0ALQBXAGUAYgBLAGkAdABGAG8AcgBt
AEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAwAGcAVwANAAoAQwBvAG4A
dABlAG4AdAAtAEQAaQBzAHAAbwBzAGkAdABpAG8AbgA6ACAAZgBvAHIAbQAtAGQAYQB0AGEAOwAg
AG4AYQBtAGUAPQAiAHIAZQBkAGkAcgBlAGMAdABfAHUAcgBpACIADQAKAA0ACgBoAHQAdABwAHMA
OgAvAC8AdwB3AHcALgBnAGUAdABwAG8AcwB0AG0AYQBuAC4AYwBvAG0ALwBvAGEAdQB0AGgAMgAv
AGMAYQBsAGwAYgBhAGMAawANAAoALQAtAC0ALQAtAC0AVwBlAGIASwBpAHQARgBvAHIAbQBCAG8A
dQBuAGQAYQByAHkANwBNAEEANABZAFcAeABrAFQAcgBaAHUAMABnAFcADQAKAEMAbwBuAHQAZQBu
AHQALQBEAGkAcwBwAG8AcwBpAHQAaQBvAG4AOgAgAGYAbwByAG0ALQBkAGEAdABhADsAIABuAGEA
bQBlAD0AIgBjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0ACIADQAKAA0ACgBrAFMANABsAFoANgBX
AFQAUABUAC8AOQBKAEUAaQAzADEAeQA3AEwARQA0AGgAWgBvAEgAMAB3AFcAbQBkADgASABFAFkA
QgBEADIAVABEAEQAaQBvAD0ADQAKAC0ALQAtAC0ALQAtAFcAZQBiAEsAaQB0AEYAbwByAG0AQgBv
AHUAbgBkAGEAcgB5ADcATQBBADQAWQBXAHgAawBUAHIAWgB1ADAAZwBXAA0ACgBDAG8AbgB0AGUA
bgB0AC0ARABpAHMAcABvAHMAaQB0AGkAbwBuADoAIABmAG8AcgBtAC0AZABhAHQAYQA7ACAAbgBh
AG0AZQA9ACIAcgBlAHMAbwB1AHIAYwBlACIADQAKAA0ACgBoAHQAdABwAHMAOgAvAC8AZgBpAGUA
bABkAGYAaQBzAGgAZQByAC0AdABlAHMAdAAwADEALgBzAGEAbgBkAGIAbwB4AC4AbwBwAGUAcgBh
AHQAaQBvAG4AcwAuAGQAeQBuAGEAbQBpAGMAcwAuAGMAbwBtAA0ACgAtAC0ALQAtAC0ALQBXAGUA
YgBLAGkAdABGAG8AcgBtAEIAbwB1AG4AZABhAHIAeQA3AE0AQQA0AFkAVwB4AGsAVAByAFoAdQAw
AGcAVwAtAC0AAQ9BAEQATwBDAG8AbgBuAABLRQBYAEUAQwBVAFQARQAgAFsAZQB0AGwAXQAuAFsA
dQBzAHAAXwBFAFQATABfAEUAcgByAG8AcgBMAG8AZwBnAGkAbgBnAF0AIAAAAywAAHFTAFQAXwA0
ADMAYgBkAGQAMABhAGUAYQA2ADUAMQA0ADIAYwA1AGEAOQA0ADEAOABmADQANgAzADgAMQAzAGUA
YQAzADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAPdmfwEt
7ytBqSpXCUsH9r4ABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEFAAASgIEFIAIBHBgGIAEBEoCF
AwcBDgUgABKAiQUgABKAjQYgARKAkRwDIAAcAyAADgQgAQIOBQACDg4OBQABEj0OFwcODg4RSRFJ
Dg4STRJREVUNEUkODRJZBgABARGAoQYgAQERgKUEAAARSQgAAhFVEUkRSQMgAA0FAAICDg4HIAIS
gKkODgUAAQ4dDgogAxKAqQ4cEYCtCCABEoCxEoCpBAABHA4GIAESgL0ODRABAR4AFRKAxQESgL0D
CgEOAwoBDQQgAQEcBSABEUkNBgADDg4ODgUHAhwSXQUgABKAyQYgARKAzRwEIAEcHAcABA4ODg4O
BiACAQ4SXQMgAAgIAAESgN0RgOEEIAASPQYgAgEOEj0It3pcVhk04IkIiYRdzYCAzJEIWYBi53+R
X3UIMK1P5rKmru0EAAAAAAQBAAAAAwYSaQMGEm0DBhIQAgYIAwYRFAcgAhI9HBJFBSACAQ4OBAAA
EmkEAAASbQUAAQESbQQAABIQAwAAAQQIABJpBAgAEm0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNDNiZGQwYWVhNjUxNDJjNWE5NDE4
ZjQ2MzgxM2VhMzcAAAUBAAAAAAgBAANGRlcAABkBABRDb3B5cmlnaHQgQCBGRlcgMjAxNwAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACwSQAAAAAAAAAAAADKSQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAvEkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAJgQA
AAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAOl6hhkAAAEA6XqGGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBIYD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAEYARgBXAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADQAMwBiAGQAZAAwAGEAZQBhADYANQAxADQAMgBjADUAYQA5ADQAMQA4AGYANAA2ADMAOAAxADMA
ZQBhADMANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADUAMwA0
AC4AMwAxADQANgA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEA
ZgAzADMAYwBjAGIAOABjAGYAMwBjADQANQBkADkAOQA1ADUAYgA5ADEAOAA0AGQAYgBmAGQAZABl
AGMAMAAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAARgBGAFcAIAAyADAAMQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBhAGYAMwAzAGMAYwBiADgAYwBmADMAYwA0ADUAZAA5ADkANQA1AGIAOQAx
ADgANABkAGIAZgBkAGQAZQBjADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANAAzAGIAZABkADAAYQBlAGEANgA1ADEANAAyAGMANQBhADkANAAxADgAZgA0
ADYAMwA4ADEAMwBlAGEAMwA3AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADUAMwA0AC4AMwAxADQANgA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADUAMwA0AC4AMwAxADQANgA1AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAANw5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get Access Code from URL"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{952d9cfc-7d9b-4acf-8699-adb8e65bc6ef}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get Access Code from URL"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f50b7982b1d24fbcbb4703426bd68b86"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_f50b7982b1d24fbcbb4703426bd68b86.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{aba5fb6e-c9ed-4644-9c34-e8b137ee696f}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4b996e902115484a8ba35ea98f100ada</RootNamespace><AssemblyName>ST_f50b7982b1d24fbcbb4703426bd68b86</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Settings.get_Default():ST_4b996e902115484a8ba35ea98f100ada.Properties.Sett" +
    "ings")]

namespace ST_4b996e902115484a8ba35ea98f100ada.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_4b996e902115484a8ba35ea98f100ada
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4b996e902115484a8ba35ea98f100ada</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4b996e902115484a8ba35ea98f100ada</msb:DisplayName>
		<msb:ProjectId>{AE3292DC-CE37-4320-A0BB-182090FACB20}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f50b7982b1d24fbcbb4703426bd68b86.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4b996e902115484a8ba35ea98f100ada")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("FFW")]
[assembly: AssemblyProduct("ST_4b996e902115484a8ba35ea98f100ada")]
[assembly: AssemblyCopyright("Copyright @ FFW 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4b996e902115484a8ba35ea98f100ada.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4b996e902115484a8ba35ea98f100ada.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f50b7982b1d24fbcbb4703426bd68b86.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFRiFFoAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAApiwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQsAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArAwAAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
LAAAAAAAAEgAAAACAAUAxCAAANgKAAABAAAAAAAAAJwrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADYCKBAAAAoWbxEAAAoqHgIoEgAACioeAigTAAAKKq5+AQAA
BC0ecgEAAHDQAwAAAigUAAAKbxUAAApzFgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKBcAAAoqLnMIAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAgAMAACN+AADsAwAAEAUAACNTdHJpbmdzAAAAAPwIAAB0AAAAI1VTAHAJAAAQAAAAI0dVSUQA
AACACQAAWAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAABsAAAAFAAAABgAA
AAkAAAABAAAAFwAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAAPgMBAAAA
AAAGAAECBQQGAJACBQQGAE0B8gMPAHkEAAAGAHoBswMGAOQBswMGAMUBswMGAHcCswMGACECswMG
ADoCswMGAJEBswMGAKwBtAIKAFUC7QIKAMwA7QIGAG0DZgMGADAB8gMGAN4EZgMGANUDJQQGAMUD
ngMOAAABKAMOAGEBKAMOAOgAiQMGABUBBQQKABYD7QIGAJcAZgMGAHMAZgMGAAQFswMAAAAAJQAA
AAAAAQABAAEAEAB+AzYAOQABAAEAAAAQACwEiARFAAEAAwAAARAAtwSIBFkAAwAHAAMBAADQBAAA
PQAEAAoAEQByA08AEQC8AFMAEQBjAFcABgYuAFsAVoDABF4AVoCcAF4AUCAAAAAAhgCEAwYAAQBe
IAAAAACGGOUDBgABAGYgAAAAAIMY5QMGAAEAbiAAAAAAkwjRA2IAAQCaIAAAAACTCKQAZwABAKEg
AAAAAJMIsABsAAEAqSAAAAAAlgjlBHIAAgCwIAAAAACGGOUDBgACALggAAAAAJEY6wN3AAIAAAAB
AK4CCQDlAwEAEQDlAwYAGQDlAwoAKQDlAxAAMQDlAxAAOQDlAxAAQQDlAxAASQDlAxAAUQDlAxAA
WQDlAxAAYQDlAxAAaQDlAwYAgQDlAwYAqQDlAxUAuQDlAwYAcQDIBBsAwQDxBAEAcQDlAwYAiQDl
AwYAyQCFACAAyQAABScAkQDlAywAsQDlAwYACAAUAEUACAAYAEoAKQBzALIALgALAIoALgATAJMA
LgAbALIALgAjALsALgArAOQALgAzAOQALgA7AOoALgBDALsALgBLAPMALgBTAOQALgBbAA0BQwBj
AEoASQBzALIAYQB7AEoAYwBrAEoAAwABAAQAAwAAANUDewAAAMQAgAAAAOkEhQACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAIYZ6noAAAAAAAABAAAABAAAAAAAAAAAAAAAMwBaAAAAAAAN
AAAAAAAAAAAAAAA8AM4CAAAAAAQAAAAAAAAAAAAAADMAZgMAAAAAAAAAAAEAAAA2BAAABQACAAAA
AAAAU1RfZjUwYjc5ODJiMWQyNGZiY2JiNDcwMzQyNmJkNjhiODYAPE1vZHVsZT4AdmFsdWVfXwBT
VF80Yjk5NmU5MDIxMTU0ODRhOGJhMzVlYTk4ZjEwMGFkYQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFu
Y2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAVHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0LlNxbFNlcnZlci5T
Y3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0
T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2Y1MGI3OTgyYjFkMjRmYmNiYjQ3
MDM0MjZiZDY4Yjg2LmRsbABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1
bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
NGI5OTZlOTAyMTE1NDg0YThiYTM1ZWE5OGYxMDBhZGEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzRiOTk2ZTkwMjExNTQ4NGE4YmEzNWVhOThmMTAwYWRh
LlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0
AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQAAAAAAcVMAVABfADQAYgA5
ADkANgBlADkAMAAyADEAMQA1ADQAOAA0AGEAOABiAGEAMwA1AGUAYQA5ADgAZgAxADAAMABhAGQA
YQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAACxE9tzjv3dOjQNf
zFpPX9sABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAASYQYAARJlEWkEIAASbQYgAgEOEm0I
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0F
AAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRiOTk2ZTkwMjExNTQ4NGE4YmEzNWVhOThmMTAw
YWRhAAAFAQAAAAAIAQADRkZXAAAZAQAUQ29weXJpZ2h0IEAgRkZXIDIwMTcAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAB8LAAAAAAAAAAAAACWLAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAiCwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA6nqGGQAAAQDqeoYZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAARgBGAFcAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8ANABiADkAOQA2AGUAOQAwADIAMQAxADUANAA4ADQAYQA4AGIAYQAzADUA
ZQBhADkAOABmADEAMAAwAGEAZABhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADYANQAzADQALgAzADEANAA2ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8AZgA1ADAAYgA3ADkAOAAyAGIAMQBkADIANABmAGIAYwBiAGIANAA3ADAAMwA0
ADIANgBiAGQANgA4AGIAOAA2AC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABGAEYAVwAgADIAMAAxADcAAAAAACoAAQAB
AEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGYANQAwAGIANwA5ADgAMgBiADEAZAAyADQAZgBi
AGMAYgBiADQANwAwADMANAAyADYAYgBkADYAOABiADgANgAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA0AGIAOQA5ADYAZQA5ADAAMgAxADEANQA0ADgANABh
ADgAYgBhADMANQBlAGEAOQA4AGYAMQAwADAAYQBkAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAzADQALgAzADEANAA2ADYAAAAAAEYADwABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQAzADQALgAzADEANAA2ADYA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAqDwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get RefreshToken and ExpirationDateTime"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7D29C043-9530-4420-AB52-594E4C8C2697}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get RefreshToken and ExpirationDateTime"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
          SQLTask:SqlStatementSource="SELECT &#xA;&#x9;@paramConnectionToken = [ConnectionToken],&#xA;&#x9;@paramrefreshtoken= [RefreshToken], &#xA;&#x9;@pramexpirationdatetime= [ConnectionTokenExpirationDate],&#xA;&#x9;@paramInitialAccessTokenDateTime = ISNULL([InitialAccessTokenDateTime],'1900-01-01 00:00:000')&#xA;FROM &#xA;&#x9;[dbo].[OAuth2] &#xA;WHERE &#xA;&#x9;[InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramrefreshtoken"
            SQLTask:DtsVariableName="User::GetRefreshToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@pramexpirationdatetime"
            SQLTask:DtsVariableName="User::TokenExpirationDate"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramInitialAccessTokenDateTime"
            SQLTask:DtsVariableName="User::InitialAccessTokenDateTime"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramConnectionToken"
            SQLTask:DtsVariableName="User::GetAccessToken"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Save Tken Details on sys oAuth"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E3CBD4E6-0797-4354-A181-1D7317F92213}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Save Tken Details on sys oAuth"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FFC49ADA-D742-4D20-B10E-448849B72C13}"
          SQLTask:SqlStatementSource="Declare @ConnectionToken nvarchar(max) = @paccesstoken,&#xA;@ConnectionTokenExpirationDate datetime = @pexpirationdate,&#xA;@AuthorizationCode nvarchar(max) = @paccesscode,&#xA;@RefreshToken nvarchar(max)=@prefreshtoken,&#xA;@InitialAccessTokenDateTime DateTime = @paramInitialAccessTokenDateTime&#xA;&#xA;UPDATE [dbo].[OAuth2]&#xA;   SET [ConnectionToken] = @ConnectionToken&#xA;      ,[ConnectionTokenExpirationDate] = @ConnectionTokenExpirationDate&#xA;      ,[AuthorizationCode] = @AuthorizationCode&#xA;      ,[RefreshToken] = @RefreshToken&#xA;      ,[InitialAccessTokenDateTime] = @InitialAccessTokenDateTime&#xA;WHERE [InstanceName] = 'TEST01'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paccesstoken"
            SQLTask:DtsVariableName="User::GetAccessToken"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@pexpirationdate"
            SQLTask:DtsVariableName="User::TokenExpirationDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paccesscode"
            SQLTask:DtsVariableName="User::AccessCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@prefreshtoken"
            SQLTask:DtsVariableName="User::GetRefreshToken"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@paramInitialAccessTokenDateTime"
            SQLTask:DtsVariableName="User::InitialAccessTokenDateTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="6"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{b0244f1f-232a-4832-b24e-90c077f7bd83}"
      DTS:From="Package\get Access Code from URL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Generate Access and Refresh Tokens" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{70270DBA-FAB7-46D3-92B9-4DB351A51EF4}"
      DTS:From="Package\Generate Access and Refresh Tokens"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Save Tken Details on sys oAuth" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{9839DF23-C633-4238-86C1-2B3D1E90DF70}"
      DTS:From="Package\get RefreshToken and ExpirationDateTime"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\get Access Code from URL" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="256,42"
          Id="Package\Generate Access and Refresh Tokens"
          TopLeft="114,272" />
        <NodeLayout
          Size="205,42"
          Id="Package\get Access Code from URL"
          TopLeft="142,181" />
        <NodeLayout
          Size="280,42"
          Id="Package\get RefreshToken and ExpirationDateTime"
          TopLeft="108,80" />
        <NodeLayout
          Size="229,42"
          Id="Package\Save Tken Details on sys oAuth"
          TopLeft="122,379" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="243.25,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="239.25,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="246.25,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>